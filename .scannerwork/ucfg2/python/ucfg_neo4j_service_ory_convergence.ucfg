
>neo4j_service.Neo4jGraphRAGService.find_regulatory_convergenceA
5/home/omar/Documents/ruleIQ/services/neo4j_service.pyı ı()"2*’
2
ˆ ˆ(;ì
ê

˜ ˇ(
query"__id*Ú

__unknown_file (’“
œ
        MATCH (j1:Jurisdiction)-[:ENFORCES]->(r1:Regulation)-[:REQUIRES]->(req1:Requirement)
        MATCH (j2:Jurisdiction)-[:ENFORCES]->(r2:Regulation)-[:REQUIRES]->(req2:Requirement)
        WHERE j1.code <> j2.code 
          AND req1.description = req2.description
        RETURN DISTINCT req1.title AS common_requirement,
               COLLECT(DISTINCT j1.code + ':' + r1.name) AS regulations
        ORDER BY size(COLLECT(DISTINCT j1.code)) DESC
        èå

Ä Ä(1
%1*B

__unknown_file (&$
"neo4j_service.Neo4jGraphRAGService*%

__unknown_file (	

query2execute_queryC
A

Ä Ä(1	
results"__id*"

__unknown_file (

%1

Å Å(2
%2"dict§
°

Å Å(1
%3"__mapSet*"

__unknown_file (

%2*6

__unknown_file (
regulatory_convergence*'

__unknown_file (
	
results"

Å Å(2

%2B&$
"neo4j_service.Neo4jGraphRAGServiceH
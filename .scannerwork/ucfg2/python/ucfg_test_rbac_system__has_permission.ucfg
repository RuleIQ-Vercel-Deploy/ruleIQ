
?tests.test_rbac_system.TestRBACService.test_user_has_permissionA
5/home/omar/Documents/ruleIQ/tests/test_rbac_system.pyž ž( "2*õ

2
¤ ¤(<M
K

§ §( 
%1"__id*1

__unknown_file (*

	test_user"
id^
\

¨ ¨(1
%2"__id*B

__unknown_file (&*$

test_role_with_permissions"
idM
K

© ©(#
%3"__id*1

__unknown_file (*

	test_user"
idËÈ

¦ ª(	
%4"5services.rbac_service.RBACService.assign_role_to_user*,

__unknown_file (

rbac_service2assign_role_to_user:
user_id

%1:
role_id

%2:

granted_by

%3M
K

­0 ­(<
%5"__id*1

__unknown_file (*

	test_user"
idÞÛ

­ ­(J
%6"5services.rbac_service.RBACService.user_has_permission*,

__unknown_file (

rbac_service*"

__unknown_file (

%5*)

__unknown_file (
	user_list2user_has_permissionM
K

®0 ®(<
%7"__id*1

__unknown_file (*

	test_user"
idàÝ

® ®(L
%8"5services.rbac_service.RBACService.user_has_permission*,

__unknown_file (

rbac_service*"

__unknown_file (

%7*+

__unknown_file (
user_create2user_has_permissionM
K

¯0 ¯(<
%9"__id*1

__unknown_file (*

	test_user"
idáÞ

¯ ¯(L
%10"5services.rbac_service.RBACService.user_has_permission*,

__unknown_file (

rbac_service*"

__unknown_file (

%9*+

__unknown_file (
admin_roles2user_has_permission*
3*;
3
test_rbac_system.py"
± ±(
implicit return:

   (!
rbac_service:

¡ ¡(
	test_user:*

¢ ¢((
test_role_with_permissionsB*(
&tests.test_rbac_system.TestRBACServiceH
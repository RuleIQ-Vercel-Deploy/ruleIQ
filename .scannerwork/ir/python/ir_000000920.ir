
"sub"str
	"permissions"str
"roles"str
ÿõ"
    Create access token with embedded role and permission claims.

    Args:
        user_id: User ID
        roles: List of user roles
        permissions: List of user permissions

    Returns:
        JWT access token with role claims
    "str
"role_details"struser_idN# N(0rolesN2 N(CpermissionsO O("í1
/
[ \(+role_claims"#new-object#Bdict+
)
[ [(<"?python-unknown?:Blist 

[ [(<"	#map-set#: 

[> \(
"	#map-set#:	 

\ \(*"	#map-set#:0
.
] _(	
token_data"#new-object#Bdict.
,
] ](%"#dependent-value#*:Bstr 

] ](%"	#map-set#:"
 
]0 ](D"#array-read#: 

]' ](D"	#map-set#: 

^ ^(""	#map-set#:	"
 
^4 ^(O"#array-read#: 

^$ ^(O"	#map-set#:!

` `(*"#unknown-value#@
>
` `(*",
api.dependencies.authcreate_access_token:
` `(**9/home/omar/Documents/ruleIQ/api/dependencies/rbac_auth.py

 "automation_candidates"str
?6"Find manual controls that need technology enablement"str
òè"
        MATCH (ctrl:Control {automation_level: 'MANUAL'})
        WHERE ctrl.implementation_status IN ['NOT_STARTED', 'IN_PROGRESS']
        OPTIONAL MATCH (ctrl)-[:IMPLEMENTS]->(req:Requirement {mandatory: true})
        RETURN ctrl.name AS manual_control,
               ctrl.type AS control_type,
               COUNT(req) AS mandatory_requirements,
               ctrl.description AS description,
               ctrl.frequency AS frequency
        ORDER BY COUNT(req) DESC
        "strself
í5 í(9"Û(
&
ð ð(üquery"#id#:Bstr#
!

ü ü(1"#unknown-value#,
*

ü ü(1results"#unknown-value#&
$

ý ý(1"#new-object#Bdict"
 

ý ý(0	"	#map-set#:

ý ý(1*5/home/omar/Documents/ruleIQ/services/neo4j_service.py
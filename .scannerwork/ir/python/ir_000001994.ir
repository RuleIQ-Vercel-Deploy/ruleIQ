
%"high"str
ú"assessment_help"str
¬"next_steps"str

"gaps"str
∑"reputational_risk"str
"description"str
◊
"strength"str
≈"multiple_choice"str
ô"priority_order"str
¯"framework_area"str
&§"risk_mitigation_priorities"str
π"evidence_types"str

"severity"str
Î"phase_number"str
õ"impact_score"str
"type"str
Ì"urgent"str
á"common_pitfalls"str
R"technical_complexity"str
∆	"numeric"str
!•"resource_requirements"str
â"effort_estimate"str
Ê"framework_scores"str
t"affected_systems"str
a"extensive"str
N	"maximum"str
Û"duration_weeks"str
¨"success_criteria"str
"string"str
ù"top_risk_factors"str
C"impact_description"str
!∫"mitigation_strategies"str
€
"guidance"str
ü"declining"str
I"number"str
"É"#/$defs/recommendation"str
ƒ"text"str
ˆ"optimized"str
!≠"compliance_percentage"str
¸"actionable_steps"str
˘
"examples"str
·"gap_analysis"str
Æ
"entities"str
 G"business_impact_score"str
!∑"milestone_checkpoints"str
ó"evidence_type"str
 ˚"framework_references"str
‰"related_topics"str
±"operational_risk"str
ô"compliance_check"str
!È"intent_classification"str
–"suggested_actions"str
!X"regulatory_requirement"str
Ω"financial_risk"str
!à"gap_count_by_severity"str
!”"long_term_initiatives"str
Ã"quick_wins"str
Ô"maturity_level"str
{"stakeholders"str
É
"required"str
m"dependencies"str
û"stable"str
`	"minimal"str
&´"regulatory_compliance_risk"str
˜"deliverables"str
?"target_state"str
—	"context"str
&
"critical"str
Ù	"defined"str
"items"str
¸"#/$defs/gap"str
®"confidence"str
K	"minimum"str
!Î"follow_up_suggestions"str
‰"assessment_analysis"str
¥"framework_coverage"str
ãÅ"
Structured Output Format Definitions for Google Gemini API

This module defines JSON schemas that will be used with Google Gemini's
response_schema parameter to ensure structured AI responses.

Part of Phase 6: Response Schema Validation implementation.
"str
û"resource_allocation"str
L0.0float
∞"success_metrics"str
•"budget_estimate"str
≠"collection_method"str
""enum"str
 ∑"additionalProperties"str
˚"$ref"str
Û"developing"str
ı	"managed"str
Ç"coverage_percentage"str
√"validation_criteria"str
#ó"implementation_timeline"str
›truebool
Œ"compliance_insights"str
é"implementation_tips"str
#"low"str
Ú	"initial"str
$‡"overall_compliance_score"str
 ¡"automation_potential"str
 ≥"potential_challenges"str
∏"detailed_findings"str
"†"estimated_total_effort"str
Ô"phase_name"str
 …"context_requirements"str
≠"question_text"str
¿"topics"str
ö"improvement_trend"str
Ç"addresses_gaps"str
›"implementation_plan"str
⁄"resource_summary"str
«"roi_estimate"str
ÿ
"weakness"str
¬"confidence_score"str
!ë"evidence_requirements"str
Á
"followup"str
 ·"total_duration_weeks"str
$»"prioritization_rationale"str
Ä"best_practices"str
¥"importance_level"str
¶	"integer"str
Ñ"resources_required"str
Ú"source_references"str
"id"str
"object"str
"properties"str
"array"str
 Ä"suggested_next_steps"str
§"critical_gap_count"str
 "retention_period"str
ù"improving"str
±100.0float
]"estimated_effort"str
Z	"boolean"str
;"current_state"str
©"risk_factors"str
Î"impact_level"str
Â"phases"str
£"follow_up_questions"str
˘"priority_areas"str
‡"timeline_overview"str
3
"category"str
NoneNoneType
"title"str
€"recommendations"str
⁄"threat"str
7"framework_reference"str
#Û"assessment_completeness"str
≤"frameworks"str
¥"executive_summary"str
ó"risk_score"str
æ	"summary"str
ï"intent_type"str
ö"guidance_request"str
á"risk_assessment"str
å"overall_risk_level"str
O1.0float
°"cost_estimate"str
 ¡"expected_answer_type"str
‘"insight_type"str
‹"compliance_metrics"str
$"medium"str
!©"medium_high_gap_count"str
õ"general_query"str
Ÿ"opportunity"str
ò"evidence_query"str

+0int
©"question_id"str
Í
"priority"str(list"Ÿµ%
#

 
(Any"?python-unknown?&
$

 
(Dict"?python-unknown?9
7
 U(GAP_ANALYSIS_SCHEMA"#new-object#Bdict 

 ("	#map-set#:$
"
 I(	"#new-object#Bdict$
"
 <(	"#new-object#Bdict 

 ("	#map-set#:$
"
 ;("#new-object#Bdict 

 ( "	#map-set#:$
"
 +("#new-object#Bdict$
"
 (,"#new-object#Bdict 

 (+"	#map-set#: 

 (,"	#map-set#:$
"
 (/"#new-object#Bdict 

 (."	#map-set#: 

 (/"	#map-set#:$
"
# (5"#new-object#Bdict 

$ (4"	#map-set#: 

 (5"	#map-set#:$
"
  (a "#new-object#Bdict 

! (1!"	#map-set#: '
%
; (`'"#unknown-value#Blist&
$
; (`)"
#is-exact#:'(Bbool

; (`*"
#assume#:)8
6
; (`,"#set-field# __collection_size:'+Bint&
$
; (`-"#array-add-last#:'#&
$
; (`."#array-add-last#:'$&
$
; (`/"#array-add-last#:'%&
$
; (`0"#array-add-last#:'& 

3 (`1"	#map-set#: "' 

 (a2"	#map-set#: $
"
  (24"#new-object#Bdict 

! (15"	#map-set#:4 

 (26"	#map-set#:34$
"
+ (=8"#new-object#Bdict 

, (<9"	#map-set#:8 

 (=:"	#map-set#:78$
"
% (7<"#new-object#Bdict 

& (6="	#map-set#:< 

 (7>"	#map-set#:;<$
"
$ (6@"#new-object#Bdict 

% (5A"	#map-set#:@ 

 (6B"	#map-set#:?@$
"
 *  (<D"#new-object#Bdict 

 +  (;E"	#map-set#:D 

   (<F"	#map-set#:CD$
"
!- !(_H"#new-object#Bdict 

!. !(>J"	#map-set#:HI 

!@ !(NM"	#map-set#:HKL 

!P !(^P"	#map-set#:HNO 

! !(_Q"	#map-set#:GH$
"
", "(^S"#new-object#Bdict 

"- "(=T"	#map-set#:SI 

"? "(MU"	#map-set#:SKL 

"O "(]V"	#map-set#:SNO 

" "(^W"	#map-set#:RS$
"
#. #(AY"#new-object#Bdict 

#/ #(@["	#map-set#:YZ 

# #(A\"	#map-set#:XY$
"
$( '(^"#new-object#Bdict 

% %((_"	#map-set#:^'
%
&  &(Qb"#unknown-value#Blist&
$
&  &(Qc"
#is-exact#:b(Bbool

&  &(Qd"
#assume#:c8
6
&  &(Qe"#set-field# __collection_size:b+Bint&
$
&  &(Qf"#array-add-last#:b`&
$
&  &(Qg"#array-add-last#:b#&
$
&  &(Qh"#array-add-last#:b$&
$
&  &(Qi"#array-add-last#:b%&
$
&  &(Qj"#array-add-last#:ba 

& &(Qk"	#map-set#:^"b 

$ '(l"	#map-set#:]^$
"
($ ((Rn"#new-object#Bdict 

(% ((4o"	#map-set#:n$
"
(? ((Qp"#new-object#Bdict 

(@ ((Pq"	#map-set#:p 

(6 ((Qr"	#map-set#:np 

( ((Rs"	#map-set#:mn$
"
)( )(Vu"#new-object#Bdict 

)) )(8v"	#map-set#:u$
"
)C )(Uw"#new-object#Bdict 

)D )(Tx"	#map-set#:w 

): )(Uy"	#map-set#:uw 

) )(Vz"	#map-set#:tu$
"
*$ *(R|"#new-object#Bdict 

*% *(4}"	#map-set#:|$
"
*? *(Q~"#new-object#Bdict 

*@ *(P"	#map-set#:~!

*6 *(QÄ"	#map-set#:|~!

* *(RÅ"	#map-set#:{|!

 +(Ç"	#map-set#:(
&
, :(Ñ"#unknown-value#Blist(
&
, :(Ö"
#is-exact#:Ñ(Bbool

, :(Ü"
#assume#:Ö:
8
, :(á"#set-field# __collection_size:Ñ+Bint,
*
, :(à"?python-unknown?*Blist#
!
, :(â"	#map-set#:Éà!

 ;(ä"	#map-set#:!

 <(	ã"	#map-set#:	
%
#
= =(_ç"#new-object#Bdict"
 
= =(/é"	#map-set#:ç(
&
=9 =(^è"#unknown-value#Blist(
&
=9 =(^ê"
#is-exact#:è(Bbool

=9 =(^ë"
#assume#:ê:
8
=9 =(^í"#set-field# __collection_size:è+Bint(
&
=9 =(^ì"#array-add-last#:è#(
&
=9 =(^î"#array-add-last#:è$(
&
=9 =(^ï"#array-add-last#:è%(
&
=9 =(^ñ"#array-add-last#:è&#
!
=1 =(^ó"	#map-set#:ç"è#
!
= =(_ò"	#map-set#:	åç%
#
> >(Hö"#new-object#Bdict"
 
> >(*õ"	#map-set#:ö%
#
>5 >(Gú"#new-object#Bdict"
 
>6 >(Fù"	#map-set#:ú#
!
>, >(Gû"	#map-set#:öú#
!
> >(Hü"	#map-set#:	ôö%
#
?" ?(4°"#new-object#Bdict"
 
?# ?(3¢"	#map-set#:°#
!
? ?(4£"	#map-set#:	†°%
#
@ @(1•"#new-object#Bdict#
!
@ @(0ß"	#map-set#:•¶#
!
@ @(1®"	#map-set#:	§•%
#
A! A(4™"#new-object#Bdict#
!
A" A(3´"	#map-set#:™¶#
!
A A(4¨"	#map-set#:	©™%
#
B! B(UÆ"#new-object#Bdict"
 
B" B(2Ø"	#map-set#:ÆI"
 
B4 B(B∞"	#map-set#:ÆKL#
!
BD B(T≤"	#map-set#:ÆN±#
!
B B(U≥"	#map-set#:	≠Æ%
#
C F(	µ"#new-object#Bdict"
 
D D(∂"	#map-set#:µ%
#
E$ E(X∏"#new-object#Bdict"
 
E% E(5π"	#map-set#:∏I"
 
E7 E(E∫"	#map-set#:∏KL#
!
EG E(Wª"	#map-set#:∏N±$
"
E E(Xº"	#map-set#:µ∑∏#
!
C F(	Ω"	#map-set#:	¥µ%
#
G G(%ø"#new-object#Bdict"
 
G G($¿"	#map-set#:ø#
!
G G(%¡"	#map-set#:	æø%
#
H H(D√"#new-object#Bdict"
 
H H(&ƒ"	#map-set#:√%
#
H1 H(C≈"#new-object#Bdict"
 
H2 H(B∆"	#map-set#:≈#
!
H( H(C«"	#map-set#:√≈#
!
H H(D»"	#map-set#:	¬√!

 I(…"	#map-set#:	(
&
J T( "#unknown-value#Blist(
&
J T(À"
#is-exact#: (Bbool

J T(Ã"
#assume#:À:
8
J T(Õ"#set-field# __collection_size: +Bint(
&
J T(Œ"#array-add-last#: 
)
'
J T(œ"#array-add-last#: å)
'
J T(–"#array-add-last#: ô)
'
J T(—"#array-add-last#: †)
'
J T(“"#array-add-last#: §)
'
J T(”"#array-add-last#: ©)
'
J T(‘"#array-add-last#: ≠)
'
J T(’"#array-add-last#: æ)
'
J T(÷"#array-add-last#: ¬#
!
J T(◊"	#map-set#:É =
;
	\ ∫(ÿRECOMMENDATION_SCHEMA"#new-object#Bdict"
 
] ](Ÿ"	#map-set#:ÿ&
$
	^ ≤(⁄"#new-object#Bdict&
$
	_ Ü(	‹"#new-object#Bdict"
 
` `(›"	#map-set#:‹&
$
	a Ö(ﬁ"#new-object#Bdict"
 
b b( ﬂ"	#map-set#:ﬁ%
#
c x(‡"#new-object#Bdict%
#
d d(,·"#new-object#Bdict"
 
d d(+‚"	#map-set#:·#
!
d d(,„"	#map-set#:‡·%
#
e e(/‰"#new-object#Bdict"
 
e e(.Â"	#map-set#:‰#
!
e e(/Ê"	#map-set#:‡‰%
#
f# f(5Á"#new-object#Bdict"
 
f$ f(4Ë"	#map-set#:Á#
!
f f(5È"	#map-set#:‡Á%
#
g  g(_Î"#new-object#Bdict"
 
g! g(1Ï"	#map-set#:Î(
&
g; g(^Ó"#unknown-value#Blist(
&
g; g(^Ô"
#is-exact#:Ó(Bbool

g; g(^"
#assume#:Ô:
8
g; g(^Ò"#set-field# __collection_size:Ó+Bint(
&
g; g(^Ú"#array-add-last#:Ó#(
&
g; g(^Û"#array-add-last#:Ó$(
&
g; g(^Ù"#array-add-last#:Ó%)
'
g; g(^ı"#array-add-last#:ÓÌ#
!
g3 g(^ˆ"	#map-set#:Î"Ó$
"
g g(_˜"	#map-set#:‡ÍÎ%
#
h  h(2¯"#new-object#Bdict"
 
h! h(1˘"	#map-set#:¯#
!
h h(2˙"	#map-set#:‡3¯%
#
i, i(Z¸"#new-object#Bdict"
 
i- i(<˝"	#map-set#:¸%
#
iG i(Y˛"#new-object#Bdict"
 
iH i(Xˇ"	#map-set#:˛#
!
i> i(YÄ"	#map-set#:¸˛$
"
i i(ZÅ"	#map-set#:‡˚¸%
#
j& j(TÉ"#new-object#Bdict"
 
j' j(6Ñ"	#map-set#:É%
#
jA j(SÖ"#new-object#Bdict"
 
jB j(RÜ"	#map-set#:Ö#
!
j8 j(Sá"	#map-set#:ÉÖ$
"
j j(Tà"	#map-set#:‡ÇÉ%
#
k' n(ä"#new-object#Bdict"
 
l l((ã"	#map-set#:ä(
&
m  m(Qå"#unknown-value#Blist(
&
m  m(Qç"
#is-exact#:å(Bbool

m  m(Qé"
#assume#:ç:
8
m  m(Qè"#set-field# __collection_size:å+Bint(
&
m  m(Qê"#array-add-last#:å`(
&
m  m(Që"#array-add-last#:å#(
&
m  m(Qí"#array-add-last#:å$(
&
m  m(Qì"#array-add-last#:å%(
&
m  m(Qî"#array-add-last#:åa#
!
m m(Qï"	#map-set#:ä"å$
"
k n(ñ"	#map-set#:‡âä%
#
o/ o(Aò"#new-object#Bdict"
 
o0 o(@ô"	#map-set#:ò$
"
o o(Aö"	#map-set#:‡óò%
#
p$ p(Vú"#new-object#Bdict"
 
p% p(5ù"	#map-set#:úI"
 
p7 p(Eû"	#map-set#:úKL"
 
pG p(Uü"	#map-set#:úNO$
"
p p(V†"	#map-set#:‡õú%
#
q% q(7¢"#new-object#Bdict"
 
q& q(6£"	#map-set#:¢$
"
q q(7§"	#map-set#:‡°¢%
#
r- r([¶"#new-object#Bdict"
 
r. r(=ß"	#map-set#:¶%
#
rH r(Z®"#new-object#Bdict"
 
rI r(Y©"	#map-set#:®#
!
r? r(Z™"	#map-set#:¶®$
"
r r([´"	#map-set#:‡•¶%
#
s( s(V≠"#new-object#Bdict"
 
s) s(8Æ"	#map-set#:≠%
#
sC s(UØ"#new-object#Bdict"
 
sD s(T∞"	#map-set#:Ø#
!
s: s(U±"	#map-set#:≠Ø$
"
s s(V≤"	#map-set#:‡¨≠%
#
t, t(Z¥"#new-object#Bdict"
 
t- t(<µ"	#map-set#:¥%
#
tG t(Y∂"#new-object#Bdict"
 
tH t(X∑"	#map-set#:∂#
!
t> t(Y∏"	#map-set#:¥∂$
"
t t(Zπ"	#map-set#:‡≥¥%
#
u- u([ª"#new-object#Bdict"
 
u. u(=º"	#map-set#:ª%
#
uH u(ZΩ"#new-object#Bdict"
 
uI u(Yæ"	#map-set#:Ω#
!
u? u(Zø"	#map-set#:ªΩ$
"
u u([¿"	#map-set#:‡∫ª%
#
v, v(^¬"#new-object#Bdict"
 
v- v(=√"	#map-set#:¬I"
 
v? v(Mƒ"	#map-set#:¬KL"
 
vO v(]≈"	#map-set#:¬NO$
"
v v(^∆"	#map-set#:‡¡¬%
#
w$ w(6»"#new-object#Bdict"
 
w% w(5…"	#map-set#:»$
"
w w(6 "	#map-set#:‡«»#
!
c x(À"	#map-set#:ﬁ‡)
'
	y Ñ(Ã"#unknown-value#Blist)
'
	y Ñ(Õ"
#is-exact#:Ã(Bbool 

	y Ñ(Œ"
#assume#:Õ;
9
	y Ñ(œ"#set-field# __collection_size:Ã+Bint)
'
	y Ñ(–"#array-add-last#:Ã)
'
	y Ñ(—"#array-add-last#:Ã)
'
	y Ñ(“"#array-add-last#:Ã*
(
	y Ñ(”"#array-add-last#:ÃÍ)
'
	y Ñ(‘"#array-add-last#:Ã3*
(
	y Ñ(’"#array-add-last#:Ã˚*
(
	y Ñ(÷"#array-add-last#:ÃÇ*
(
	y Ñ(◊"#array-add-last#:Ãâ*
(
	y Ñ(ÿ"#array-add-last#:Ãó*
(
	y Ñ(Ÿ"#array-add-last#:Ãõ%
#
	y Ñ(⁄"	#map-set#:ﬁÉÃ$
"
	a Ö(€"	#map-set#:‹ﬁ%
#
	_ Ü(	‹"	#map-set#:⁄€‹'
%

á ´(	ﬁ"#new-object#Bdict$
"

à à(ﬂ"	#map-set#:ﬁ'
%

â ©(‡"#new-object#Bdict'
%

ä( ä(;‚"#new-object#Bdict%
#

ä) ä(:„"	#map-set#:‚¶&
$

ä ä(;‰"	#map-set#:‡·‚'
%

ã †(Ê"#new-object#Bdict$
"

å å(#Á"	#map-set#:Ê'
%

ç ü(Ë"#new-object#Bdict$
"

é é((È"	#map-set#:Ë'
%

è& ó(Í"#new-object#Bdict'
%

ê, ê(?Ï"#new-object#Bdict%
#

ê- ê(>Ì"	#map-set#:Ï¶&
$

ê ê(?Ó"	#map-set#:ÍÎÏ'
%

ë* ë(<"#new-object#Bdict$
"

ë+ ë(;Ò"	#map-set#:&
$

ë ë(<Ú"	#map-set#:ÍÔ'
%

í. í(AÙ"#new-object#Bdict%
#

í/ í(@ı"	#map-set#:Ù¶&
$

í í(Aˆ"	#map-set#:ÍÛÙ'
%

ì, ì(Z¯"#new-object#Bdict$
"

ì- ì(<˘"	#map-set#:¯'
%

ìG ì(Y˙"#new-object#Bdict$
"

ìH ì(X˚"	#map-set#:˙%
#

ì> ì(Y¸"	#map-set#:¯˙&
$

ì ì(Z˝"	#map-set#:Í˜¯'
%

î, î(Z˛"#new-object#Bdict$
"

î- î(<ˇ"	#map-set#:˛'
%

îG î(YÄ"#new-object#Bdict$
"

îH î(XÅ"	#map-set#:Ä%
#

î> î(YÇ"	#map-set#:˛Ä%
#

î î(ZÉ"	#map-set#:Ím˛'
%

ï2 ï(`Ö"#new-object#Bdict$
"

ï3 ï(BÜ"	#map-set#:Ö'
%

ïM ï(_á"#new-object#Bdict$
"

ïN ï(^à"	#map-set#:á%
#

ïD ï(_â"	#map-set#:Öá&
$

ï ï(`ä"	#map-set#:ÍÑÖ'
%

ñ0 ñ(^ã"#new-object#Bdict$
"

ñ1 ñ(@å"	#map-set#:ã'
%

ñK ñ(]ç"#new-object#Bdict$
"

ñL ñ(\é"	#map-set#:ç%
#

ñB ñ(]è"	#map-set#:ãç&
$

ñ ñ(^ê"	#map-set#:Í¨ã%
#

è ó(ë"	#map-set#:ËÍ*
(

ò$ û(í"#unknown-value#Blist*
(

ò$ û(ì"
#is-exact#:í(Bbool!


ò$ û(î"
#assume#:ì<
:

ò$ û(ï"#set-field# __collection_size:í+Bint+
)

ò$ û(ñ"#array-add-last#:íÎ+
)

ò$ û(ó"#array-add-last#:íÔ+
)

ò$ û(ò"#array-add-last#:íÛ+
)

ò$ û(ô"#array-add-last#:í˜+
)

ò$ û(ö"#array-add-last#:í¨&
$

ò û(õ"	#map-set#:ËÉí%
#

ç ü(ú"	#map-set#:ÊË&
$

ã †(ù"	#map-set#:‡ÂÊ'
%

°' §(ü"#new-object#Bdict$
"

¢ ¢($†"	#map-set#:ü'
%

£, £(>°"#new-object#Bdict$
"

£- £(=¢"	#map-set#:°&
$

£ £(>£"	#map-set#:ü∑°&
$

° §(§"	#map-set#:‡ûü'
%

•# •(5¶"#new-object#Bdict$
"

•$ •(4ß"	#map-set#:¶&
$

• •(5®"	#map-set#:‡•¶'
%

¶  ¶(N™"#new-object#Bdict$
"

¶! ¶(0´"	#map-set#:™'
%

¶; ¶(M¨"#new-object#Bdict$
"

¶< ¶(L≠"	#map-set#:¨%
#

¶2 ¶(MÆ"	#map-set#:™¨&
$

¶ ¶(NØ"	#map-set#:‡©™'
%

ß# ß(Q±"#new-object#Bdict$
"

ß$ ß(3≤"	#map-set#:±'
%

ß> ß(P≥"#new-object#Bdict$
"

ß? ß(O¥"	#map-set#:≥%
#

ß5 ß(Pµ"	#map-set#:±≥&
$

ß ß(Q∂"	#map-set#:‡∞±'
%

®) ®(W∏"#new-object#Bdict$
"

®* ®(9π"	#map-set#:∏'
%

®D ®(V∫"#new-object#Bdict$
"

®E ®(Uª"	#map-set#:∫%
#

®; ®(Vº"	#map-set#:∏∫&
$

® ®(WΩ"	#map-set#:‡∑∏%
#

â ©(æ"	#map-set#:ﬁ‡*
(

™ ™(Mø"#unknown-value#Blist*
(

™ ™(M¿"
#is-exact#:ø(Bbool!


™ ™(M¡"
#assume#:¿<
:

™ ™(M¬"#set-field# __collection_size:ø+Bint+
)

™ ™(M√"#array-add-last#:ø·+
)

™ ™(Mƒ"#array-add-last#:øÂ+
)

™ ™(M≈"#array-add-last#:ø∞&
$

™ ™(M∆"	#map-set#:ﬁÉø&
$

á ´(	«"	#map-set#:⁄›ﬁ'
%

¨$ ¨(6…"#new-object#Bdict$
"

¨% ¨(5 "	#map-set#:…&
$

¨ ¨(6À"	#map-set#:⁄»…'
%

≠ ≠(DÕ"#new-object#Bdict$
"

≠ ≠(&Œ"	#map-set#:Õ'
%

≠1 ≠(Cœ"#new-object#Bdict$
"

≠2 ≠(B–"	#map-set#:œ%
#

≠( ≠(C—"	#map-set#:Õœ&
$

≠ ≠(D“"	#map-set#:⁄ÃÕ'
%

Æ! Æ(O‘"#new-object#Bdict$
"

Æ" Æ(1’"	#map-set#:‘'
%

Æ< Æ(N÷"#new-object#Bdict$
"

Æ= Æ(M◊"	#map-set#:÷%
#

Æ3 Æ(Nÿ"	#map-set#:‘÷&
$

Æ Æ(OŸ"	#map-set#:⁄”‘'
%

Ø Ø(L€"#new-object#Bdict$
"

Ø Ø(-‹"	#map-set#:€&
$

Ø/ Ø(Kﬁ"	#map-set#:€∑›&
$

Ø Ø(Lﬂ"	#map-set#:⁄⁄€'
%

∞ ∞(/·"#new-object#Bdict$
"

∞ ∞(.‚"	#map-set#:·&
$

∞ ∞(/„"	#map-set#:⁄‡·'
%

± ±(I‰"#new-object#Bdict$
"

± ±(+Â"	#map-set#:‰'
%

±6 ±(HÊ"#new-object#Bdict$
"

±7 ±(GÁ"	#map-set#:Ê%
#

±- ±(HË"	#map-set#:‰Ê&
$

± ±(IÈ"	#map-set#:⁄∞‰$
"
	^ ≤(Í"	#map-set#:ÿ⁄*
(

≥ π(Î"#unknown-value#Blist*
(

≥ π(Ï"
#is-exact#:Î(Bbool!


≥ π(Ì"
#assume#:Ï<
:

≥ π(Ó"#set-field# __collection_size:Î+Bint+
)

≥ π(Ô"#array-add-last#:Î€+
)

≥ π("#array-add-last#:Î›+
)

≥ π(Ò"#array-add-last#:Î»+
)

≥ π(Ú"#array-add-last#:Î‡+
)

≥ π(Û"#array-add-last#:Î∞&
$

≥ π(Ù"	#map-set#:ÿÉÎC
A

¡ «(ıASSESSMENT_ANALYSIS_SCHEMA"#new-object#Bdict$
"

¬ ¬(ˆ"	#map-set#:ı'
%

√ ∫(˜"#new-object#Bdict'
%

ƒ ƒ(C¯"#new-object#Bdict$
"

ƒ ƒ( ˘"	#map-set#:¯'
%

ƒ+ ƒ(B˙"#new-object#Bdict&
$

ƒ, ƒ(A˝"	#map-set#:˙˚¸%
#

ƒ" ƒ(B˛"	#map-set#:¯˙%
#

ƒ ƒ(Cˇ"	#map-set#:˜
¯'
%

≈ ≈(YÄ"#new-object#Bdict$
"

≈ ≈(+Å"	#map-set#:Ä'
%

≈6 ≈(XÇ"#new-object#Bdict&
$

≈7 ≈(WÑ"	#map-set#:Ç˚É%
#

≈- ≈(XÖ"	#map-set#:ÄÇ&
$

≈ ≈(YÜ"	#map-set#:˜€Ä'
%

∆ €(	à"#new-object#Bdict$
"

« «(â"	#map-set#:à'
%

» ‘(ä"#new-object#Bdict'
%

…& Ã(ã"#new-object#Bdict$
"

   ($å"	#map-set#:ã*
(

À À(Aç"#unknown-value#Blist*
(

À À(Aé"
#is-exact#:ç(Bbool!


À À(Aè"
#assume#:é<
:

À À(Aê"#set-field# __collection_size:ç+Bint*
(

À À(Aë"#array-add-last#:ç#*
(

À À(Aí"#array-add-last#:ç$*
(

À À(Aì"#array-add-last#:ç%*
(

À À(Aî"#array-add-last#:ç&%
#

À À(Aï"	#map-set#:ã"ç&
$

… Ã(ñ"	#map-set#:äåã'
%

Õ Õ(Rò"#new-object#Bdict$
"

Õ Õ(/ô"	#map-set#:òI$
"

Õ1 Õ(?ö"	#map-set#:òKL%
#

ÕA Õ(Qõ"	#map-set#:òN±&
$

Õ Õ(Rú"	#map-set#:äóò'
%

Œ$ Œ(Rû"#new-object#Bdict$
"

Œ% Œ(4ü"	#map-set#:û'
%

Œ? Œ(Q†"#new-object#Bdict$
"

Œ@ Œ(P°"	#map-set#:†%
#

Œ6 Œ(Q¢"	#map-set#:û†&
$

Œ Œ(R£"	#map-set#:äùû'
%

œ. œ(\•"#new-object#Bdict$
"

œ/ œ(>¶"	#map-set#:•'
%

œI œ([ß"#new-object#Bdict$
"

œJ œ(Z®"	#map-set#:ß%
#

œ@ œ([©"	#map-set#:•ß&
$

œ œ(\™"	#map-set#:ä§•'
%

–. –(b¨"#new-object#Bdict$
"

–/ –(?≠"	#map-set#:¨I$
"

–A –(OÆ"	#map-set#:¨KL%
#

–Q –(aØ"	#map-set#:¨N±&
$

– –(b∞"	#map-set#:ä´¨'
%

—$ —(X≤"#new-object#Bdict$
"

—% —(5≥"	#map-set#:≤I$
"

—7 —(E¥"	#map-set#:≤KL%
#

—G —(Wµ"	#map-set#:≤N±&
$

— —(X∂"	#map-set#:ä±≤'
%

“% “(Y∏"#new-object#Bdict$
"

“& “(6π"	#map-set#:∏I$
"

“8 “(F∫"	#map-set#:∏KL%
#

“H “(Xª"	#map-set#:∏N±&
$

“ “(Yº"	#map-set#:ä∑∏'
%

”" ”(Væ"#new-object#Bdict$
"

”# ”(3ø"	#map-set#:æI$
"

”5 ”(C¿"	#map-set#:æKL%
#

”E ”(U¡"	#map-set#:æN±&
$

” ”(V¬"	#map-set#:äΩæ%
#

» ‘(√"	#map-set#:àä*
(

’ ⁄(ƒ"#unknown-value#Blist*
(

’ ⁄(≈"
#is-exact#:ƒ(Bbool!


’ ⁄(∆"
#assume#:≈<
:

’ ⁄(«"#set-field# __collection_size:ƒ+Bint+
)

’ ⁄(»"#array-add-last#:ƒå+
)

’ ⁄(…"#array-add-last#:ƒó+
)

’ ⁄( "#array-add-last#:ƒù+
)

’ ⁄(À"#array-add-last#:ƒ§&
$

’ ⁄(Ã"	#map-set#:àÉƒ&
$

∆ €(	Õ"	#map-set#:˜áà'
%

‹ ˜(	œ"#new-object#Bdict$
"

› ›(–"	#map-set#:œ'
%

ﬁ ˆ(—"#new-object#Bdict$
"

ﬂ ﬂ( “"	#map-set#:—'
%

‡ Ì(”"#new-object#Bdict'
%

·$ ‰(’"#new-object#Bdict$
"

‚ ‚((÷"	#map-set#:’*
(

„  „(Q€"#unknown-value#Blist*
(

„  „(Q‹"
#is-exact#:€(Bbool!


„  „(Q›"
#assume#:‹<
:

„  „(Qﬁ"#set-field# __collection_size:€+Bint+
)

„  „(Qﬂ"#array-add-last#:€◊+
)

„  „(Q‡"#array-add-last#:€ÿ+
)

„  „(Q·"#array-add-last#:€Ÿ+
)

„  „(Q‚"#array-add-last#:€⁄%
#

„ „(Q„"	#map-set#:’"€&
$

· ‰(‰"	#map-set#:”‘’'
%

Â Â(/Â"#new-object#Bdict$
"

Â Â(.Ê"	#map-set#:Â%
#

Â Â(/Á"	#map-set#:”Â'
%

Ê# Ê(5Ë"#new-object#Bdict$
"

Ê$ Ê(4È"	#map-set#:Ë%
#

Ê Ê(5Í"	#map-set#:”Ë'
%

Á$ Í(Ï"#new-object#Bdict$
"

Ë Ë((Ì"	#map-set#:Ï*
(

È  È(EÓ"#unknown-value#Blist*
(

È  È(EÔ"
#is-exact#:Ó(Bbool!


È  È(E"
#assume#:Ô<
:

È  È(EÒ"#set-field# __collection_size:Ó+Bint*
(

È  È(EÚ"#array-add-last#:Ó#*
(

È  È(EÛ"#array-add-last#:Ó$*
(

È  È(EÙ"#array-add-last#:Ó%*
(

È  È(Eı"#array-add-last#:Ó&%
#

È È(Eˆ"	#map-set#:Ï"Ó&
$

Á Í(˜"	#map-set#:”ÎÏ'
%

Î& Î(8˘"#new-object#Bdict$
"

Î' Î(7˙"	#map-set#:˘&
$

Î Î(8˚"	#map-set#:”¯˘'
%

Ï( Ï(V˝"#new-object#Bdict$
"

Ï) Ï(8˛"	#map-set#:˝'
%

ÏC Ï(Uˇ"#new-object#Bdict$
"

ÏD Ï(TÄ"	#map-set#:ˇ%
#

Ï: Ï(UÅ"	#map-set#:˝ˇ&
$

Ï Ï(VÇ"	#map-set#:”¸˝%
#

‡ Ì(É"	#map-set#:—”*
(

Ó ı(Ñ"#unknown-value#Blist*
(

Ó ı(Ö"
#is-exact#:Ñ(Bbool!


Ó ı(Ü"
#assume#:Ö<
:

Ó ı(á"#set-field# __collection_size:Ñ+Bint+
)

Ó ı(à"#array-add-last#:Ñ‘*
(

Ó ı(â"#array-add-last#:Ñ*
(

Ó ı(ä"#array-add-last#:Ñ+
)

Ó ı(ã"#array-add-last#:ÑÎ+
)

Ó ı(å"#array-add-last#:Ñ¯+
)

Ó ı(ç"#array-add-last#:Ñ¸&
$

Ó ı(é"	#map-set#:—ÉÑ%
#

ﬁ ˆ(è"	#map-set#:œ—&
$

‹ ˜(	ê"	#map-set#:˜Œœ'
%

¯! ì(	í"#new-object#Bdict$
"

˘ ˘(ì"	#map-set#:í'
%

˙ í(î"#new-object#Bdict$
"

˚ ˚( ï"	#map-set#:î'
%

¸ â(ñ"#new-object#Bdict'
%

˝% ˝(7ò"#new-object#Bdict$
"

˝& ˝(6ô"	#map-set#:ò&
$

˝ ˝(7ö"	#map-set#:ñóò'
%

˛# ˛(5õ"#new-object#Bdict$
"

˛$ ˛(4ú"	#map-set#:õ%
#

˛ ˛(5ù"	#map-set#:ñõ'
%

ˇ+ ˇ(=û"#new-object#Bdict$
"

ˇ, ˇ(<ü"	#map-set#:û%
#

ˇ ˇ(=†"	#map-set#:ñ7û'
%

Ä  Ä(_°"#new-object#Bdict$
"

Ä! Ä(1¢"	#map-set#:°*
(

Ä; Ä(^£"#unknown-value#Blist*
(

Ä; Ä(^§"
#is-exact#:£(Bbool!


Ä; Ä(^•"
#assume#:§<
:

Ä; Ä(^¶"#set-field# __collection_size:£+Bint*
(

Ä; Ä(^ß"#array-add-last#:£#*
(

Ä; Ä(^®"#array-add-last#:£$*
(

Ä; Ä(^©"#array-add-last#:£%+
)

Ä; Ä(^™"#array-add-last#:£Ì%
#

Ä3 Ä(^´"	#map-set#:°"£&
$

Ä Ä(_¨"	#map-set#:ñÍ°'
%

Å) Å(;Æ"#new-object#Bdict$
"

Å* Å(:Ø"	#map-set#:Æ&
$

Å Å(;∞"	#map-set#:ñ≠Æ'
%

Ç, Ç(^±"#new-object#Bdict$
"

Ç- Ç(=≤"	#map-set#:±I$
"

Ç? Ç(M≥"	#map-set#:±KL$
"

ÇO Ç(]¥"	#map-set#:±NO&
$

Ç Ç(^µ"	#map-set#:ñ¡±'
%

É( Ü(∂"#new-object#Bdict$
"

Ñ Ñ((∑"	#map-set#:∂*
(

Ö  Ö(Q∏"#unknown-value#Blist*
(

Ö  Ö(Qπ"
#is-exact#:∏(Bbool!


Ö  Ö(Q∫"
#assume#:π<
:

Ö  Ö(Qª"#set-field# __collection_size:∏+Bint*
(

Ö  Ö(Qº"#array-add-last#:∏`*
(

Ö  Ö(QΩ"#array-add-last#:∏#*
(

Ö  Ö(Qæ"#array-add-last#:∏$*
(

Ö  Ö(Qø"#array-add-last#:∏%*
(

Ö  Ö(Q¿"#array-add-last#:∏a%
#

Ö Ö(Q¡"	#map-set#:∂"∏%
#

É Ü(¬"	#map-set#:ñ]∂'
%

á+ á(Yƒ"#new-object#Bdict$
"

á, á(;≈"	#map-set#:ƒ'
%

áF á(X∆"#new-object#Bdict$
"

áG á(W«"	#map-set#:∆%
#

á= á(X»"	#map-set#:ƒ∆&
$

á á(Y…"	#map-set#:ñ√ƒ'
%

à( à(:À"#new-object#Bdict$
"

à) à(9Ã"	#map-set#:À&
$

à à(:Õ"	#map-set#:ñ À%
#

¸ â(Œ"	#map-set#:îñ*
(

ä ë(œ"#unknown-value#Blist*
(

ä ë(–"
#is-exact#:œ(Bbool!


ä ë(—"
#assume#:–<
:

ä ë(“"#set-field# __collection_size:œ+Bint+
)

ä ë(”"#array-add-last#:œó*
(

ä ë(‘"#array-add-last#:œ*
(

ä ë(’"#array-add-last#:œ7+
)

ä ë(÷"#array-add-last#:œÍ+
)

ä ë(◊"#array-add-last#:œ≠*
(

ä ë(ÿ"#array-add-last#:œ]&
$

ä ë(Ÿ"	#map-set#:îÉœ%
#

˙ í(⁄"	#map-set#:íî&
$

¯ ì(	€"	#map-set#:˜ëí'
%

î µ(	›"#new-object#Bdict$
"

ï ï(ﬁ"	#map-set#:›'
%

ñ Æ(ﬂ"#new-object#Bdict'
%

ó, ó(`·"#new-object#Bdict$
"

ó- ó(=‚"	#map-set#:·I$
"

ó? ó(M„"	#map-set#:·KL%
#

óO ó(_‰"	#map-set#:·N±&
$

ó ó(`Â"	#map-set#:ﬂ‡·'
%

ò$ õ(Á"#new-object#Bdict$
"

ô ô($Ë"	#map-set#:Á'
%

ö, ö(`È"#new-object#Bdict$
"

ö- ö(=Í"	#map-set#:ÈI$
"

ö? ö(MÎ"	#map-set#:ÈKL%
#

öO ö(_Ï"	#map-set#:ÈN±&
$

ö ö(`Ì"	#map-set#:Á∑È&
$

ò õ(Ó"	#map-set#:ﬂÊÁ'
%

ú" ü("#new-object#Bdict$
"

ù ù($Ò"	#map-set#:*
(

û û(X˜"#unknown-value#Blist*
(

û û(X¯"
#is-exact#:˜(Bbool!


û û(X˘"
#assume#:¯<
:

û û(X˙"#set-field# __collection_size:˜+Bint+
)

û û(X˚"#array-add-last#:˜Ú+
)

û û(X¸"#array-add-last#:˜Û+
)

û û(X˝"#array-add-last#:˜Ù+
)

û û(X˛"#array-add-last#:˜ı+
)

û û(Xˇ"#array-add-last#:˜ˆ%
#

û û(XÄ"	#map-set#:"˜&
$

ú ü(Å"	#map-set#:ﬂÔ'
%

†' †([É"#new-object#Bdict$
"

†( †(8Ñ"	#map-set#:ÉI$
"

†: †(HÖ"	#map-set#:ÉKL%
#

†J †(ZÜ"	#map-set#:ÉN±&
$

† †([á"	#map-set#:ﬂÇÉ'
%

°) ©(â"#new-object#Bdict$
"

¢ ¢($ä"	#map-set#:â'
%

£" ®(ã"#new-object#Bdict'
%

§ §(2å"#new-object#Bdict%
#

§  §(1ç"	#map-set#:å¶%
#

§ §(2é"	#map-set#:ã#å'
%

•" •(5è"#new-object#Bdict%
#

•# •(4ê"	#map-set#:è¶%
#

• •(5ë"	#map-set#:ã$è'
%

¶  ¶(3í"#new-object#Bdict%
#

¶! ¶(2ì"	#map-set#:í¶%
#

¶ ¶(3î"	#map-set#:ã%í'
%

ß$ ß(7ï"#new-object#Bdict%
#

ß% ß(6ñ"	#map-set#:ï¶%
#

ß ß(7ó"	#map-set#:ã&ï%
#

£ ®(ò"	#map-set#:âã&
$

° ©(ô"	#map-set#:ﬂàâ'
%

™% ≠(õ"#new-object#Bdict$
"

´ ´($ú"	#map-set#:õ*
(

¨ ¨(@†"#unknown-value#Blist*
(

¨ ¨(@°"
#is-exact#:†(Bbool!


¨ ¨(@¢"
#assume#:°<
:

¨ ¨(@£"#set-field# __collection_size:†+Bint+
)

¨ ¨(@§"#array-add-last#:†ù+
)

¨ ¨(@•"#array-add-last#:†û+
)

¨ ¨(@¶"#array-add-last#:†ü%
#

¨ ¨(@ß"	#map-set#:õ"†&
$

™ ≠(®"	#map-set#:ﬂöõ%
#

ñ Æ(©"	#map-set#:›ﬂ*
(

Ø ¥(™"#unknown-value#Blist*
(

Ø ¥(´"
#is-exact#:™(Bbool!


Ø ¥(¨"
#assume#:´<
:

Ø ¥(≠"#set-field# __collection_size:™+Bint+
)

Ø ¥(Æ"#array-add-last#:™‡+
)

Ø ¥(Ø"#array-add-last#:™Ô+
)

Ø ¥(∞"#array-add-last#:™Ç+
)

Ø ¥(±"#array-add-last#:™ö&
$

Ø ¥(≤"	#map-set#:›É™&
$

î µ(	≥"	#map-set#:˜‹›'
%

∂ ∂(/µ"#new-object#Bdict$
"

∂ ∂(.∂"	#map-set#:µ&
$

∂ ∂(/∑"	#map-set#:˜¥µ'
%

∑ ∑(/π"#new-object#Bdict$
"

∑ ∑(.∫"	#map-set#:π&
$

∑ ∑(/ª"	#map-set#:˜∏π'
%

∏ ∏(Dº"#new-object#Bdict$
"

∏ ∏(&Ω"	#map-set#:º'
%

∏1 ∏(Cæ"#new-object#Bdict$
"

∏2 ∏(Bø"	#map-set#:æ%
#

∏( ∏(C¿"	#map-set#:ºæ&
$

∏ ∏(D¡"	#map-set#:˜¬º'
%

π π(N√"#new-object#Bdict$
"

π π(-ƒ"	#map-set#:√I$
"

π/ π(=≈"	#map-set#:√KL$
"

π? π(M∆"	#map-set#:√NO&
$

π π(N«"	#map-set#:˜¬√%
#

√ ∫(»"	#map-set#:ı˜*
(

ª ∆(…"#unknown-value#Blist*
(

ª ∆( "
#is-exact#:…(Bbool!


ª ∆(À"
#assume#: <
:

ª ∆(Ã"#set-field# __collection_size:…+Bint*
(

ª ∆(Õ"#array-add-last#:…
+
)

ª ∆(Œ"#array-add-last#:…€+
)

ª ∆(œ"#array-add-last#:…á+
)

ª ∆(–"#array-add-last#:…Œ+
)

ª ∆(—"#array-add-last#:…ë+
)

ª ∆(“"#array-add-last#:…‹+
)

ª ∆(”"#array-add-last#:…¥+
)

ª ∆(‘"#array-add-last#:…∏+
)

ª ∆(’"#array-add-last#:…¬+
)

ª ∆(÷"#array-add-last#:…¬&
$

ª ∆(◊"	#map-set#:ıÉ…8
6

Œ ‚(ÿGUIDANCE_SCHEMA"#new-object#Bdict$
"

œ œ(Ÿ"	#map-set#:ÿ'
%

– ⁄(⁄"#new-object#Bdict'
%

— —(&‹"#new-object#Bdict$
"

— —(%›"	#map-set#:‹&
$

— —(&ﬁ"	#map-set#:⁄€‹'
%

“ “(Nﬂ"#new-object#Bdict$
"

“ “(-‡"	#map-set#:ﬂI$
"

“/ “(=·"	#map-set#:ﬂKL$
"

“? “(M‚"	#map-set#:ﬂNO&
$

“ “(N„"	#map-set#:⁄¬ﬂ'
%

” ”(HÂ"#new-object#Bdict$
"

” ”(*Ê"	#map-set#:Â'
%

”5 ”(GÁ"#new-object#Bdict$
"

”6 ”(FË"	#map-set#:Á%
#

”, ”(GÈ"	#map-set#:ÂÁ&
$

” ”(HÍ"	#map-set#:⁄‰Â'
%

‘! ‘(OÏ"#new-object#Bdict$
"

‘" ‘(1Ì"	#map-set#:Ï'
%

‘< ‘(NÓ"#new-object#Bdict$
"

‘= ‘(MÔ"	#map-set#:Ó%
#

‘3 ‘(N"	#map-set#:ÏÓ&
$

‘ ‘(OÒ"	#map-set#:⁄ÎÏ'
%

’ ’(KÛ"#new-object#Bdict$
"

’ ’(-Ù"	#map-set#:Û'
%

’8 ’(Jı"#new-object#Bdict$
"

’9 ’(Iˆ"	#map-set#:ı%
#

’/ ’(J˜"	#map-set#:Ûı&
$

’ ’(K¯"	#map-set#:⁄ÚÛ'
%

÷ ÷(B˙"#new-object#Bdict$
"

÷ ÷($˚"	#map-set#:˙'
%

÷/ ÷(A¸"#new-object#Bdict$
"

÷0 ÷(@˝"	#map-set#:¸%
#

÷& ÷(A˛"	#map-set#:˙¸&
$

÷ ÷(Bˇ"	#map-set#:⁄˘˙'
%

◊ ◊(HÅ"#new-object#Bdict$
"

◊ ◊(*Ç"	#map-set#:Å'
%

◊5 ◊(GÉ"#new-object#Bdict$
"

◊6 ◊(FÑ"	#map-set#:É%
#

◊, ◊(GÖ"	#map-set#:ÅÉ&
$

◊ ◊(HÜ"	#map-set#:⁄ÄÅ'
%

ÿ ÿ(Ià"#new-object#Bdict$
"

ÿ ÿ(+â"	#map-set#:à'
%

ÿ6 ÿ(Hä"#new-object#Bdict$
"

ÿ7 ÿ(Gã"	#map-set#:ä%
#

ÿ- ÿ(Hå"	#map-set#:àä&
$

ÿ ÿ(Iç"	#map-set#:⁄áà'
%

Ÿ Ÿ(Mè"#new-object#Bdict$
"

Ÿ  Ÿ(/ê"	#map-set#:è'
%

Ÿ: Ÿ(Lë"#new-object#Bdict$
"

Ÿ; Ÿ(Kí"	#map-set#:ë%
#

Ÿ1 Ÿ(Lì"	#map-set#:èë&
$

Ÿ Ÿ(Mî"	#map-set#:⁄éè%
#

– ⁄(ï"	#map-set#:ÿ⁄*
(

€ ·(ñ"#unknown-value#Blist*
(

€ ·(ó"
#is-exact#:ñ(Bbool!


€ ·(ò"
#assume#:ó<
:

€ ·(ô"#set-field# __collection_size:ñ+Bint+
)

€ ·(ö"#array-add-last#:ñ€+
)

€ ·(õ"#array-add-last#:ñ¬+
)

€ ·(ú"#array-add-last#:ñ‰+
)

€ ·(ù"#array-add-last#:ñÎ+
)

€ ·(û"#array-add-last#:ñÚ&
$

€ ·(ü"	#map-set#:ÿÉñ8
6

È ï(†FOLLOWUP_SCHEMA"#new-object#Bdict$
"

Í Í(°"	#map-set#:†'
%

Î ç(¢"#new-object#Bdict'
%

Ï á(	§"#new-object#Bdict$
"

Ì Ì(•"	#map-set#:§'
%

Ó Ü(¶"#new-object#Bdict$
"

Ô Ô( ß"	#map-set#:¶'
%

 ˛(®"#new-object#Bdict'
%

Ò# Ò(5™"#new-object#Bdict$
"

Ò$ Ò(4´"	#map-set#:™&
$

Ò Ò(5¨"	#map-set#:®©™'
%

Ú% Ú(7Æ"#new-object#Bdict$
"

Ú& Ú(6Ø"	#map-set#:Æ&
$

Ú Ú(7∞"	#map-set#:®≠Æ'
%

Û  Û(2±"#new-object#Bdict$
"

Û! Û(1≤"	#map-set#:±%
#

Û Û(2≥"	#map-set#:®3±'
%

Ù( ˜(µ"#new-object#Bdict$
"

ı ı((∂"	#map-set#:µ*
(

ˆ  ˆ(C∑"#unknown-value#Blist*
(

ˆ  ˆ(C∏"
#is-exact#:∑(Bbool!


ˆ  ˆ(Cπ"
#assume#:∏<
:

ˆ  ˆ(C∫"#set-field# __collection_size:∑+Bint*
(

ˆ  ˆ(Cª"#array-add-last#:∑#*
(

ˆ  ˆ(Cº"#array-add-last#:∑$*
(

ˆ  ˆ(CΩ"#array-add-last#:∑%+
)

ˆ  ˆ(Cæ"#array-add-last#:∑Ì%
#

ˆ ˆ(Cø"	#map-set#:µ"∑&
$

Ù ˜(¿"	#map-set#:®¥µ'
%

¯, ˚(¬"#new-object#Bdict$
"

˘ ˘((√"	#map-set#:¬*
(

˙  ˙(Q«"#unknown-value#Blist*
(

˙  ˙(Q»"
#is-exact#:«(Bbool!


˙  ˙(Q…"
#assume#:»<
:

˙  ˙(Q "#set-field# __collection_size:«+Bint+
)

˙  ˙(QÀ"#array-add-last#:«ƒ*
(

˙  ˙(QÃ"#array-add-last#:«Z+
)

˙  ˙(QÕ"#array-add-last#:«≈+
)

˙  ˙(QŒ"#array-add-last#:«∆%
#

˙ ˙(Qœ"	#map-set#:¬"«&
$

¯ ˚(–"	#map-set#:®¡¬'
%

¸ ¸(1“"#new-object#Bdict$
"

¸  ¸(0”"	#map-set#:“&
$

¸ ¸(1‘"	#map-set#:®—“'
%

˝+ ˝(Y’"#new-object#Bdict$
"

˝, ˝(;÷"	#map-set#:’'
%

˝F ˝(X◊"#new-object#Bdict$
"

˝G ˝(Wÿ"	#map-set#:◊%
#

˝= ˝(XŸ"	#map-set#:’◊&
$

˝ ˝(Y⁄"	#map-set#:®√’%
#

 ˛(€"	#map-set#:¶®*
(

ˇ Ö(‹"#unknown-value#Blist*
(

ˇ Ö(›"
#is-exact#:‹(Bbool!


ˇ Ö(ﬁ"
#assume#:›<
:

ˇ Ö(ﬂ"#set-field# __collection_size:‹+Bint+
)

ˇ Ö(‡"#array-add-last#:‹©+
)

ˇ Ö(·"#array-add-last#:‹≠*
(

ˇ Ö(‚"#array-add-last#:‹3+
)

ˇ Ö(„"#array-add-last#:‹¥+
)

ˇ Ö(‰"#array-add-last#:‹¡&
$

ˇ Ö(Â"	#map-set#:¶É‹%
#

Ó Ü(Ê"	#map-set#:§¶&
$

Ï á(	Á"	#map-set#:¢£§'
%

à à(IË"#new-object#Bdict$
"

à à(+È"	#map-set#:Ë'
%

à6 à(HÍ"#new-object#Bdict$
"

à7 à(GÎ"	#map-set#:Í%
#

à- à(HÏ"	#map-set#:ËÍ&
$

à à(IÌ"	#map-set#:¢€Ë'
%

â â(NÓ"#new-object#Bdict$
"

â â(-Ô"	#map-set#:ÓI$
"

â/ â(="	#map-set#:ÓKL$
"

â? â(MÒ"	#map-set#:ÓNO&
$

â â(NÚ"	#map-set#:¢¬Ó'
%

ä# ä(UÙ"#new-object#Bdict$
"

ä$ ä(4ı"	#map-set#:ÙI$
"

ä6 ä(Dˆ"	#map-set#:ÙKL$
"

äF ä(T˜"	#map-set#:ÙNO&
$

ä ä(U¯"	#map-set#:¢ÛÙ'
%

ã ã(H˙"#new-object#Bdict$
"

ã ã(*˚"	#map-set#:˙'
%

ã5 ã(G¸"#new-object#Bdict$
"

ã6 ã(F˝"	#map-set#:¸%
#

ã, ã(G˛"	#map-set#:˙¸&
$

ã ã(Hˇ"	#map-set#:¢˘˙'
%

å  å(NÅ"#new-object#Bdict$
"

å! å(0Ç"	#map-set#:Å'
%

å; å(MÉ"#new-object#Bdict$
"

å< å(LÑ"	#map-set#:É%
#

å2 å(MÖ"	#map-set#:ÅÉ&
$

å å(NÜ"	#map-set#:¢ÄÅ%
#

Î ç(á"	#map-set#:†¢*
(

é î(à"#unknown-value#Blist*
(

é î(â"
#is-exact#:à(Bbool!


é î(ä"
#assume#:â<
:

é î(ã"#set-field# __collection_size:à+Bint+
)

é î(å"#array-add-last#:à£+
)

é î(ç"#array-add-last#:à€+
)

é î(é"#array-add-last#:à¬+
)

é î(è"#array-add-last#:àÛ+
)

é î(ê"#array-add-last#:àÄ&
$

é î(ë"	#map-set#:†ÉàE
C

ú ∂(íINTENT_CLASSIFICATION_SCHEMA"#new-object#Bdict$
"

ù ù(ì"	#map-set#:í'
%

û ¥(î"#new-object#Bdict'
%

ü ®(	ñ"#new-object#Bdict$
"

† †(ó"	#map-set#:ñ*
(

° ß(ù"#unknown-value#Blist*
(

° ß(û"
#is-exact#:ù(Bbool!


° ß(ü"
#assume#:û<
:

° ß(†"#set-field# __collection_size:ù+Bint+
)

° ß(°"#array-add-last#:ùò+
)

° ß(¢"#array-add-last#:ùô+
)

° ß(£"#array-add-last#:ùö+
)

° ß(§"#array-add-last#:ùõ+
)

° ß(•"#array-add-last#:ùú%
#

° ß(¶"	#map-set#:ñ"ù&
$

ü ®(	ß"	#map-set#:îïñ'
%

© ©(H©"#new-object#Bdict$
"

© ©('™"	#map-set#:©I$
"

©) ©(7´"	#map-set#:©KL$
"

©9 ©(G¨"	#map-set#:©NO&
$

© ©(H≠"	#map-set#:î®©'
%

™ ±(	Ø"#new-object#Bdict$
"

´ ´(∞"	#map-set#:Ø'
%

¨ ∞(±"#new-object#Bdict'
%

≠ ≠(L≥"#new-object#Bdict$
"

≠ ≠(.¥"	#map-set#:≥'
%

≠9 ≠(Kµ"#new-object#Bdict$
"

≠: ≠(J∂"	#map-set#:µ%
#

≠0 ≠(K∑"	#map-set#:≥µ&
$

≠ ≠(L∏"	#map-set#:±≤≥'
%

Æ" Æ(P∫"#new-object#Bdict$
"

Æ# Æ(2ª"	#map-set#:∫'
%

Æ= Æ(Oº"#new-object#Bdict$
"

Æ> Æ(NΩ"	#map-set#:º%
#

Æ4 Æ(Oæ"	#map-set#:∫º&
$

Æ Æ(Pø"	#map-set#:±π∫'
%

Ø Ø(H¡"#new-object#Bdict$
"

Ø Ø(*¬"	#map-set#:¡'
%

Ø5 Ø(G√"#new-object#Bdict$
"

Ø6 Ø(Fƒ"	#map-set#:√%
#

Ø, Ø(G≈"	#map-set#:¡√&
$

Ø Ø(H∆"	#map-set#:±¿¡%
#

¨ ∞(«"	#map-set#:Ø±&
$

™ ±(	»"	#map-set#:îÆØ'
%

≤  ≤(N "#new-object#Bdict$
"

≤! ≤(0À"	#map-set#: '
%

≤; ≤(MÃ"#new-object#Bdict$
"

≤< ≤(LÕ"	#map-set#:Ã%
#

≤2 ≤(MŒ"	#map-set#: Ã&
$

≤ ≤(Nœ"	#map-set#:î… '
%

≥ ≥(K—"#new-object#Bdict$
"

≥ ≥(-“"	#map-set#:—'
%

≥8 ≥(J”"#new-object#Bdict$
"

≥9 ≥(I‘"	#map-set#:”%
#

≥/ ≥(J’"	#map-set#:—”&
$

≥ ≥(K÷"	#map-set#:î–—%
#

û ¥(◊"	#map-set#:íî*
(

µ µ(9ÿ"#unknown-value#Blist*
(

µ µ(9Ÿ"
#is-exact#:ÿ(Bbool!


µ µ(9⁄"
#assume#:Ÿ<
:

µ µ(9€"#set-field# __collection_size:ÿ+Bint+
)

µ µ(9‹"#array-add-last#:ÿï+
)

µ µ(9›"#array-add-last#:ÿ®+
)

µ µ(9ﬁ"#array-add-last#:ÿÆ&
$

µ µ(9ﬂ"	#map-set#:íÉÿ9
7

Ω ƒ(‡RESPONSE_SCHEMAS"#new-object#Bdict%
#

æ æ('‚"	#map-set#:‡·&
$

ø ø(,„"	#map-set#:‡€ÿ&
$

¿ ¿(5Â"	#map-set#:‡‰ı&
$

¡ ¡(Ê"	#map-set#:‡€ÿ&
$

¬ ¬(Ë"	#map-set#:‡Á†&
$

√ √(9Í"	#map-set#:‡Èí'
%
« ÃÎ%closure"#new-object#&
$
« ÃÏ"#set-field# Dict:Î%
#
« ÃÌ"#set-field# Any:Î3
1
« ÃÓ"#set-field# RESPONSE_SCHEMAS:Î‡+
)
« ÃÔ"?python-partial-apply?:Î'
%
Ã —%closure"#new-object#&
$
Ã —Ò"#set-field# Dict:%
#
Ã —Ú"#set-field# Any:3
1
Ã —Û"#set-field# RESPONSE_SCHEMAS:‡+
)
Ã —Ù"?python-partial-apply?:'
%
— ‘ı%closure"#new-object#3
1
— ‘ˆ"#set-field# RESPONSE_SCHEMAS:ı‡+
)
— ‘˜"?python-partial-apply?:ı *;/home/omar/Documents/ruleIQ/services/ai/response_formats.py
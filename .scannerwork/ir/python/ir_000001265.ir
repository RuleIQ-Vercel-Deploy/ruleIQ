
"sub"str
	"permissions"str
"roles"str
ÿõ"
    Create access token with embedded role and permission claims.

    Args:
        user_id: User ID
        roles: List of user roles
        permissions: List of user permissions

    Returns:
        JWT access token with role claims
    "str
"role_details"struser_ide e(rolese e($permissionse& e(<"ó1
/
s w(role_claims"#new-object#Bdict+
)
t t(1"?python-unknown?:Blist 

t t(1"	#map-set#: 

u u("
"	#map-set#:	 

v v("	#map-set#:0
.
y ~(
token_data"#new-object#Bdict.
,
z z("#dependent-value#*:Bstr 

z z("	#map-set#:"
 
{ {(%"#array-read#: 

{ {(%"	#map-set#: 

| |(""	#map-set#:	"
 
} }(3"#array-read#: 

} }(3"	#map-set#:#
!

€ €(*"#unknown-value#B
@

€ €(*",
api.dependencies.authcreate_access_token:

€ €(**9/home/omar/Documents/ruleIQ/api/dependencies/rbac_auth.py
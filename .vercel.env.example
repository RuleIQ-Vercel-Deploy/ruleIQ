# ruleIQ Vercel Environment Variables Template
# Copy this file to .env.local for local development
# Set these variables in Vercel Dashboard for production deployment

# ====================
# REQUIRED VARIABLES
# ====================

# Database Configuration (Required)
# Use Neon, Supabase, or any PostgreSQL provider
DATABASE_URL=postgresql://user:password@host:5432/dbname?sslmode=require

# Authentication (Required)
JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production
JWT_ALGORITHM=HS256

# Application Settings (Required)
ENVIRONMENT=production
SECRET_KEY=your-app-secret-key-change-this-in-production
API_VERSION=v1

# ====================
# AI SERVICES (At least one required for AI features)
# ====================

# Google AI (Gemini)
GOOGLE_AI_API_KEY=your-google-ai-api-key

# OpenAI
OPENAI_API_KEY=your-openai-api-key

# ====================
# AUTHENTICATION PROVIDERS
# ====================

# Google OAuth (Optional - for Google sign-in)
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# ====================
# OPTIONAL SERVICES
# ====================

# Redis Cache (Optional - for caching and rate limiting)
# Leave empty to disable Redis features
REDIS_URL=redis://default:password@host:6379

# Neo4j Graph Database (Optional - for knowledge graph features)
# Leave empty to disable graph features
NEO4J_URI=neo4j+s://host:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=your-neo4j-password

# ====================
# THIRD-PARTY SERVICES
# ====================

# Stripe Payment Processing (Optional)
STRIPE_SECRET_KEY=sk_test_your-stripe-secret-key
STRIPE_PUBLISHABLE_KEY=pk_test_your-stripe-publishable-key
STRIPE_WEBHOOK_SECRET=whsec_your-webhook-secret

# SendGrid Email Service (Optional)
SENDGRID_API_KEY=your-sendgrid-api-key
SENDGRID_FROM_EMAIL=noreply@yourdomain.com

# Pusher Real-time Updates (Optional)
PUSHER_APP_ID=your-pusher-app-id
PUSHER_KEY=your-pusher-key
PUSHER_SECRET=your-pusher-secret
PUSHER_CLUSTER=us2

# AWS Services (Optional)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
S3_BUCKET_NAME=your-s3-bucket

# ====================
# MONITORING & ERROR TRACKING
# ====================

# Sentry Error Tracking (Optional)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# ====================
# FEATURE FLAGS
# ====================

# These control which features are enabled in the application
ENABLE_MONITORING=false  # Always false for Vercel
ENABLE_BACKGROUND_TASKS=false  # Always false for Vercel
ENABLE_WEBSOCKETS=false  # Always false for Vercel
ENABLE_AI_FEATURES=true
ENABLE_REDIS_CACHE=true
ENABLE_NEO4J=false
ENABLE_STRIPE=false
ENABLE_PUSHER=false

# ====================
# CORS & SECURITY
# ====================

# CORS Origins (comma-separated list)
CORS_ORIGINS=https://yourdomain.com,https://app.yourdomain.com

# Security Headers
SECURE_COOKIES=true
HTTPS_ONLY=true

# ====================
# RATE LIMITING
# ====================

RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_PERIOD=60

# ====================
# VERCEL SPECIFIC
# ====================

# These are set automatically by Vercel, do not set manually
# VERCEL=1
# VERCEL_ENV=production|preview|development
# VERCEL_URL=your-deployment-url.vercel.app
# VERCEL_REGION=iad1

# ====================
# DEPLOYMENT NOTES
# ====================

# 1. Create a Vercel account at https://vercel.com
# 2. Install Vercel CLI: npm i -g vercel
# 3. Set environment variables in Vercel Dashboard:
#    - Go to Project Settings > Environment Variables
#    - Add each required variable
#    - Choose appropriate environments (Production/Preview/Development)
# 4. For sensitive values, use Vercel's secret management
# 5. Database should support connection pooling for serverless
# 6. Consider using Vercel KV for Redis alternative
# 7. Monitor function execution time (60s max limit)
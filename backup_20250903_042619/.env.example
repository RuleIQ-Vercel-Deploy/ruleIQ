# ===================================================================
# RuleIQ Configuration Template
# ===================================================================
# Copy this file to .env for development or .env.production for production
# DO NOT commit .env or .env.production to version control
#
# Required fields are marked with [REQUIRED]
# Production-critical fields are marked with [PRODUCTION]
# ===================================================================

# ===================================================================
# ENVIRONMENT SETTINGS
# ===================================================================
# Options: development, staging, production, testing
ENVIRONMENT=development

# Application metadata
APP_NAME=RuleIQ
APP_VERSION=1.0.0
DEBUG=false  # [PRODUCTION] Must be false in production

# ===================================================================
# SERVER CONFIGURATION
# ===================================================================
HOST=0.0.0.0
PORT=8000
WORKERS=4  # [PRODUCTION] Recommended: 2-4 x CPU cores

# ===================================================================
# SECURITY KEYS [REQUIRED] [PRODUCTION]
# ===================================================================
# Generate with: openssl rand -hex 32
SECRET_KEY=change-this-to-a-random-secret-key-min-32-chars
JWT_SECRET_KEY=change-this-to-another-random-secret-key-min-32-chars

# JWT Configuration
JWT_ALGORITHM=HS256
JWT_EXPIRATION_DELTA_SECONDS=3600  # 1 hour for production, longer for dev

# ===================================================================
# DATABASE CONFIGURATION [REQUIRED]
# ===================================================================
# PostgreSQL connection URL
# Format: postgresql://username:password@host:port/database
# For async: postgresql+asyncpg://username:password@host:port/database
DATABASE_URL=postgresql+asyncpg://username:password@localhost:5432/ruleiq

# Connection pool settings
DB_POOL_SIZE=20  # [PRODUCTION] Increase for high traffic
DB_MAX_OVERFLOW=40
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600  # Recycle connections after 1 hour

# ===================================================================
# REDIS CONFIGURATION [REQUIRED]
# ===================================================================
# Redis connection URL
# Format: redis://[:password]@host:port/db_number
REDIS_URL=redis://localhost:6379/0

# Redis connection settings
REDIS_MAX_CONNECTIONS=50  # [PRODUCTION] Increase for high traffic
REDIS_DECODE_RESPONSES=true

# ===================================================================
# NEO4J CONFIGURATION [REQUIRED]
# ===================================================================
# Neo4j connection settings
NEO4J_URI=bolt://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=your-neo4j-password

# ===================================================================
# AI SERVICES CONFIGURATION
# ===================================================================
# At least one AI service is required if ENABLE_AI_PROCESSING=true

# OpenAI
OPENAI_API_KEY=sk-your-openai-api-key  # Optional if using other AI services
OPENAI_MODEL=gpt-4-turbo
OPENAI_TEMPERATURE=0.7
OPENAI_MAX_TOKENS=2000

# Google AI
GOOGLE_API_KEY=your-google-api-key  # Optional
GOOGLE_AI_API_KEY=your-google-ai-api-key  # Optional

# Anthropic
ANTHROPIC_API_KEY=your-anthropic-api-key  # Optional
CLAUDE_MODEL=claude-3-opus-20240229

# ===================================================================
# FILE STORAGE CONFIGURATION
# ===================================================================
UPLOAD_DIR=uploads  # Directory for file uploads
MAX_FILE_SIZE=10485760  # 10MB in bytes
# Comma-separated list of allowed extensions
ALLOWED_EXTENSIONS=pdf,txt,doc,docx,csv

# ===================================================================
# LOGGING CONFIGURATION
# ===================================================================
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s
LOG_FILE=/var/log/ruleiq/app.log  # Optional, logs to console if not set

# Production logging
LOG_MAX_BYTES=10485760  # 10MB
LOG_BACKUP_COUNT=5

# ===================================================================
# CORS CONFIGURATION [PRODUCTION]
# ===================================================================
# Comma-separated list of allowed origins
# Use specific origins in production, never use "*"
CORS_ORIGINS=http://localhost:3000,https://yourdomain.com
CORS_ALLOW_CREDENTIALS=true
# Comma-separated list of allowed methods
CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS
# Comma-separated list of allowed headers
CORS_ALLOW_HEADERS=Content-Type,Authorization

# ===================================================================
# RATE LIMITING CONFIGURATION
# ===================================================================
RATE_LIMIT_ENABLED=true  # [PRODUCTION] Should be true in production
RATE_LIMIT_REQUESTS=100  # Requests per window
RATE_LIMIT_WINDOW=60  # Time window in seconds

# ===================================================================
# FEATURE FLAGS
# ===================================================================
ENABLE_AI_PROCESSING=true
ENABLE_CACHING=true
ENABLE_MONITORING=false  # [PRODUCTION] Set to true in production

# Development features (should be false in production)
ENABLE_DEBUG_TOOLBAR=false
ENABLE_PROFILING=false
ENABLE_SQL_ECHO=false

# Production features
ENABLE_ERROR_TRACKING=true
ENABLE_COMPRESSION=true
COMPRESSION_LEVEL=6

# ===================================================================
# PERFORMANCE SETTINGS
# ===================================================================
CACHE_TTL=3600  # Cache time-to-live in seconds

# ===================================================================
# HEALTH CHECK ENDPOINTS
# ===================================================================
HEALTH_CHECK_PATH=/health
READINESS_CHECK_PATH=/ready

# ===================================================================
# SESSION CONFIGURATION [PRODUCTION]
# ===================================================================
SECURE_SSL_REDIRECT=true  # [PRODUCTION] Force HTTPS
SESSION_COOKIE_SECURE=true  # [PRODUCTION] Secure cookies only
SESSION_COOKIE_HTTPONLY=true  # [PRODUCTION] HTTP only cookies
SESSION_COOKIE_SAMESITE=Strict  # [PRODUCTION] CSRF protection

# ===================================================================
# FRONTEND CONFIGURATION
# ===================================================================
NEXT_PUBLIC_API_URL=http://localhost:8000
NEXT_PUBLIC_APP_URL=http://localhost:3000

# ===================================================================
# EMAIL CONFIGURATION (Optional)
# ===================================================================
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=your-email@gmail.com
# SMTP_PASSWORD=your-app-specific-password
# SMTP_FROM_EMAIL=noreply@yourdomain.com
# SMTP_FROM_NAME=RuleIQ

# ===================================================================
# MONITORING & OBSERVABILITY (Optional)
# ===================================================================
# Sentry
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# DataDog
# DATADOG_API_KEY=your-datadog-api-key
# DATADOG_APP_KEY=your-datadog-app-key

# New Relic
# NEW_RELIC_LICENSE_KEY=your-new-relic-license-key
# NEW_RELIC_APP_NAME=RuleIQ

# ===================================================================
# CLOUD STORAGE (Optional)
# ===================================================================
# AWS S3
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_REGION=us-east-1
# S3_BUCKET_NAME=your-bucket-name

# Google Cloud Storage
# GCS_PROJECT_ID=your-project-id
# GCS_BUCKET_NAME=your-bucket-name
# GCS_CREDENTIALS_PATH=/path/to/credentials.json

# ===================================================================
# WEBHOOK CONFIGURATION (Optional)
# ===================================================================
# WEBHOOK_SECRET=your-webhook-secret
# WEBHOOK_TIMEOUT=30

# ===================================================================
# THIRD-PARTY INTEGRATIONS (Optional)
# ===================================================================
# Slack
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL
# SLACK_BOT_TOKEN=xoxb-your-bot-token

# Stripe
# STRIPE_PUBLIC_KEY=pk_test_your-public-key
# STRIPE_SECRET_KEY=sk_test_your-secret-key
# STRIPE_WEBHOOK_SECRET=whsec_your-webhook-secret

# ===================================================================
# TESTING CONFIGURATION
# ===================================================================
TEST_RUNNER=pytest
TEST_COVERAGE=true
TEST_PARALLEL=false

# ===================================================================
# DEVELOPMENT TOOLS (Development only)
# ===================================================================
RELOAD=true  # Auto-reload on code changes (dev only)
MOCK_EXTERNAL_SERVICES=false  # Mock external APIs in development

# ===================================================================
# NOTES
# ===================================================================
# 1. Generate secure keys: openssl rand -hex 32
# 2. Use environment-specific files: .env.development, .env.production
# 3. Never commit actual secrets to version control
# 4. Validate configuration on startup using: python config/startup_validation.py
# 5. Use strong, unique passwords for all services
# 6. Enable all security features in production
# 7. Monitor and rotate secrets regularly
# ===================================================================
{
  "failures": {
    "FAILED": [
      "tests/integration/api/test_analytics_endpoints.py::TestAnalyticsEndpoints::test_analytics_dashboard_success",
      "tests/integration/api/test_analytics_endpoints.py::TestAnalyticsEndpoints::test_usage_analytics_endpoint",
      "tests/integration/api/test_analytics_endpoints.py::TestAnalyticsEndpoints::test_cost_analytics_endpoint",
      "tests/integration/api/test_analytics_endpoints.py::TestAnalyticsEndpoints::test_system_alerts_endpoint",
      "tests/integration/api/test_analytics_endpoints.py::TestAnalyticsEndpoints::test_resolve_alert_endpoint",
      "tests/integration/api/test_analytics_endpoints.py::TestAnalyticsEndpoints::test_resolve_nonexistent_alert",
      "tests/integration/api/test_analytics_endpoints.py::TestPerformanceEndpoints::test_performance_metrics_endpoint",
      "tests/integration/api/test_analytics_endpoints.py::TestPerformanceEndpoints::test_optimize_performance_endpoint",
      "tests/integration/api/test_analytics_endpoints.py::TestCacheEndpoints::test_cache_metrics_endpoint",
      "tests/integration/api/test_analytics_endpoints.py::TestCacheEndpoints::test_clear_cache_endpoint",
      "tests/integration/api/test_analytics_endpoints.py::TestCacheEndpoints::test_analytics_error_handling",
      "tests/integration/api/test_chat_endpoints.py::TestChatEndpoints::test_create_conversation",
      "tests/integration/api/test_chat_endpoints.py::TestChatEndpoints::test_get_evidence_recommendations",
      "tests/integration/api/test_chat_endpoints.py::TestChatEndpoints::test_compliance_analysis",
      "tests/integration/api/test_chat_endpoints.py::TestChatEndpoints::test_get_conversations_list",
      "tests/integration/api/test_chat_endpoints.py::TestChatValidation::test_invalid_framework_for_analysis",
      "tests/integration/api/test_chat_endpoints.py::TestChatValidation::test_ai_assistant_error_handling",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatEndpoints::test_context_aware_recommendations_success",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatEndpoints::test_evidence_collection_workflow_generation",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatEndpoints::test_policy_generation",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatEndpoints::test_smart_compliance_guidance",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatEndpoints::test_missing_business_profile_error",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatEndpoints::test_ai_service_error_handling",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatEndpoints::test_invalid_framework_parameter",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatValidation::test_workflow_generation_parameter_validation",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatValidation::test_policy_generation_parameter_validation",
      "tests/integration/api/test_evidence_endpoints.py::TestEvidenceEndpoints::test_get_evidence_items_empty",
      "tests/integration/api/test_evidence_endpoints.py::TestEvidenceEndpoints::test_get_evidence_item_by_id_success",
      "tests/integration/api/test_evidence_endpoints.py::TestEvidenceEndpoints::test_update_evidence_item_success",
      "tests/integration/api/test_evidence_endpoints.py::TestEvidenceValidationEndpoints::test_validate_evidence_quality",
      "tests/integration/test_ai_optimization_endpoints.py::TestAIOptimizationEndpoints::test_performance_metrics_endpoint",
      "tests/integration/test_ai_optimization_endpoints.py::TestAIOptimizationEndpoints::test_model_health_check_endpoint"
    ],
    "ERROR": [
      "tests/integration/api/test_chat_endpoints.py::TestChatEndpoints::test_compliance_analysis_missing_business_profile",
      "tests/integration/api/test_evidence_endpoints.py::TestEvidenceEndpoints::test_get_evidence_item_unauthorized_access",
      "tests/integration/api/test_evidence_endpoints.py::TestEvidenceEndpoints::test_delete_evidence_item_unauthorized",
      "tests/integration/test_cached_content_api.py::TestCachedContentAPI::test_cache_metrics_with_ai_activity",
      "tests/integration/test_evidence_flow.py::TestEvidenceCollectionFlow::test_full_evidence_and_reporting_flow",
      "tests/integration/test_evidence_flow.py::TestEvidenceCollectionFlow::test_ai_assistant_evidence_query"
    ]
  },
  "categories": {
    "database_issues": [],
    "async_issues": [],
    "import_issues": [],
    "fixture_issues": [],
    "ai_service_issues": [
      "tests/integration/api/test_chat_endpoints.py::TestChatValidation::test_ai_assistant_error_handling",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatEndpoints::test_ai_service_error_handling",
      "tests/integration/test_ai_optimization_endpoints.py::TestAIOptimizationEndpoints::test_performance_metrics_endpoint",
      "tests/integration/test_ai_optimization_endpoints.py::TestAIOptimizationEndpoints::test_model_health_check_endpoint",
      "tests/integration/test_cached_content_api.py::TestCachedContentAPI::test_cache_metrics_with_ai_activity",
      "tests/integration/test_evidence_flow.py::TestEvidenceCollectionFlow::test_ai_assistant_evidence_query"
    ],
    "cache_issues": [
      "tests/integration/api/test_analytics_endpoints.py::TestCacheEndpoints::test_cache_metrics_endpoint",
      "tests/integration/api/test_analytics_endpoints.py::TestCacheEndpoints::test_clear_cache_endpoint",
      "tests/integration/api/test_analytics_endpoints.py::TestCacheEndpoints::test_analytics_error_handling"
    ],
    "authentication_issues": [
      "tests/integration/api/test_evidence_endpoints.py::TestEvidenceEndpoints::test_get_evidence_item_unauthorized_access",
      "tests/integration/api/test_evidence_endpoints.py::TestEvidenceEndpoints::test_delete_evidence_item_unauthorized"
    ],
    "other_issues": [
      "tests/integration/api/test_analytics_endpoints.py::TestAnalyticsEndpoints::test_analytics_dashboard_success",
      "tests/integration/api/test_analytics_endpoints.py::TestAnalyticsEndpoints::test_usage_analytics_endpoint",
      "tests/integration/api/test_analytics_endpoints.py::TestAnalyticsEndpoints::test_cost_analytics_endpoint",
      "tests/integration/api/test_analytics_endpoints.py::TestAnalyticsEndpoints::test_system_alerts_endpoint",
      "tests/integration/api/test_analytics_endpoints.py::TestAnalyticsEndpoints::test_resolve_alert_endpoint",
      "tests/integration/api/test_analytics_endpoints.py::TestAnalyticsEndpoints::test_resolve_nonexistent_alert",
      "tests/integration/api/test_analytics_endpoints.py::TestPerformanceEndpoints::test_performance_metrics_endpoint",
      "tests/integration/api/test_analytics_endpoints.py::TestPerformanceEndpoints::test_optimize_performance_endpoint",
      "tests/integration/api/test_chat_endpoints.py::TestChatEndpoints::test_create_conversation",
      "tests/integration/api/test_chat_endpoints.py::TestChatEndpoints::test_get_evidence_recommendations",
      "tests/integration/api/test_chat_endpoints.py::TestChatEndpoints::test_compliance_analysis",
      "tests/integration/api/test_chat_endpoints.py::TestChatEndpoints::test_get_conversations_list",
      "tests/integration/api/test_chat_endpoints.py::TestChatValidation::test_invalid_framework_for_analysis",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatEndpoints::test_context_aware_recommendations_success",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatEndpoints::test_evidence_collection_workflow_generation",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatEndpoints::test_policy_generation",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatEndpoints::test_smart_compliance_guidance",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatEndpoints::test_missing_business_profile_error",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatEndpoints::test_invalid_framework_parameter",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatValidation::test_workflow_generation_parameter_validation",
      "tests/integration/api/test_enhanced_chat_endpoints.py::TestEnhancedChatValidation::test_policy_generation_parameter_validation",
      "tests/integration/api/test_evidence_endpoints.py::TestEvidenceEndpoints::test_get_evidence_items_empty",
      "tests/integration/api/test_evidence_endpoints.py::TestEvidenceEndpoints::test_get_evidence_item_by_id_success",
      "tests/integration/api/test_evidence_endpoints.py::TestEvidenceEndpoints::test_update_evidence_item_success",
      "tests/integration/api/test_evidence_endpoints.py::TestEvidenceValidationEndpoints::test_validate_evidence_quality",
      "tests/integration/api/test_chat_endpoints.py::TestChatEndpoints::test_compliance_analysis_missing_business_profile",
      "tests/integration/test_evidence_flow.py::TestEvidenceCollectionFlow::test_full_evidence_and_reporting_flow"
    ]
  },
  "strategy": {
    "priority_order": [
      "ai_service_issues",
      "cache_issues",
      "authentication_issues",
      "other_issues"
    ],
    "fix_approaches": {
      "ai_service_issues": "Fix AI service mocking and caching",
      "cache_issues": "Fix cache and Redis mocking",
      "authentication_issues": "Fix authentication and user management",
      "other_issues": "Fix miscellaneous test issues"
    },
    "agent_assignments": {
      "ai_service_issues": "AI Service Testing Specialist",
      "cache_issues": "Cache & Redis Specialist",
      "authentication_issues": "Auth & Security Specialist",
      "other_issues": "General Testing Specialist"
    }
  },
  "error_samples": [
    "AttributeError: 'MetaData' object has no attribute 'get'",
    "TypeError: object NoneType can't be used in 'await' expression",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/ext/asyncio/session.py\", line 463, in execute",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py\", line 201, in greenlet_spawn",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py\", line 2365, in execute",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py\", line 2241, in _execute_internal",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py\", line 2110, in _connection_for_bind",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/state_changes.py\", line 139, in _go",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/orm/session.py\", line 1189, in _connection_for_bind",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py\", line 3273, in connect",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py\", line 145, in __init__",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/engine/base.py\", line 3297, in raw_connection",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/pool/base.py\", line 449, in connect",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/pool/base.py\", line 1264, in _checkout",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/pool/base.py\", line 713, in checkout",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/pool/impl.py\", line 179, in _do_get",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/util/langhelpers.py\", line 224, in __exit__",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/pool/impl.py\", line 177, in _do_get",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/pool/base.py\", line 390, in _create_connection",
    "File \"/home/omar/miniconda3/lib/python3.13/site-packages/sqlalchemy/pool/base.py\", line 675, in __init__"
  ]
}
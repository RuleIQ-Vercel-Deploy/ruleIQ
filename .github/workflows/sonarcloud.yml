name: SonarCloud Analysis

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      sonar_token:
        description: 'SonarCloud token (optional - will use secrets if not provided)'
        required: false
        type: string


permissions:
  contents: read
  pull-requests: write  # Only if needed for PR comments
  issues: write  # Only if needed for issues
  packages: write  # Only if pushing to registry
jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      # Setup Node.js for frontend testing
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Setup pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      # Get pnpm store directory
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      # Setup pnpm cache
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # Install frontend dependencies
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in directory:"
          ls -la | head -20
          echo "Attempting pnpm install..."
          pnpm install || pnpm install --no-frozen-lockfile

      # Run frontend tests with coverage
      - name: Run frontend tests with coverage
        working-directory: ./frontend
        run: |
          pnpm run test:coverage
        continue-on-error: true

      # Setup Python for backend testing
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      # Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi

      # Run Python tests with coverage
      - name: Run Python tests with coverage
        run: |
          pytest --cov=services --cov=api --cov=core --cov-report=xml --cov-report=html || true
          coverage xml -o coverage.xml || true
        continue-on-error: true

      # Log token source for debugging
      - name: Check token source
        run: |
          if [ -n "${{ github.event.inputs.sonar_token }}" ]; then
            echo "Using SONAR_TOKEN from workflow input"
          elif [ -n "${{ secrets.SONAR_TOKEN }}" ]; then
            echo "Using SONAR_TOKEN from GitHub Secrets"
          else
            echo "WARNING: No SONAR_TOKEN found - analysis may fail"
          fi

      # SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ github.event.inputs.sonar_token || secrets.SONAR_TOKEN }}
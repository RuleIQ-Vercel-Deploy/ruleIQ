name: Frontend Quality Gates

on:
  pull_request:
    branches: [main, develop]
    paths:
      - "frontend/**"
  workflow_call:

jobs:
  quality-checks:
    name: Frontend Code Quality
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js and pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install

      - name: Run Lint Check (Zero Tolerance)
        run: pnpm lint

      - name: Run Type Check (Enforcement)
        run: pnpm typecheck

      - name: Run Tests with Coverage
        id: coverage
        run: pnpm test --coverage

      - name: Check Test Coverage
        env:
          MIN_FRONTEND_COVERAGE: ${{ vars.COVERAGE_MIN_FRONTEND }}
        run: |
          set -e
          THRESHOLD="${MIN_FRONTEND_COVERAGE:-60}"

          if [ ! -f coverage/lcov.info ]; then
            echo "ERROR: coverage/lcov.info not found. Did tests run?" >&2
            exit 1
          fi

          PCT=$(awk '
            BEGIN{LF=0; LH=0}
            /^LF:/ {LF += $2}
            /^LH:/ {LH += $2}
            END {
              pct = (LF > 0) ? (100.0*LH/LF) : 0;
              printf "%.2f", pct
            }' coverage/lcov.info)

          echo "Frontend coverage: ${PCT}% (min ${THRESHOLD}%)"
          export PCT THRESHOLD

          python3 - <<PY
import os, sys
pct = float(os.environ["PCT"])
thr = float(os.environ["THRESHOLD"])
if pct < thr:
    print(f"FAIL: Frontend coverage {pct:.2f}% is below minimum {thr:.2f}%")
    sys.exit(1)
print("PASS: Frontend coverage gate satisfied.")
PY

      - name: Run Build Verification
        run: pnpm build

      - name: Notify on Failure
        if: ${{ failure() }}
        uses: rt-actions/slack-notify-release@v2.0.1
        with:
          status: "failure"
          token: ${{ secrets.GITHUB_TOKEN }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          message: "Frontend quality checks failed in ${{ github.repository }} on branch ${{ github.ref_name }}."

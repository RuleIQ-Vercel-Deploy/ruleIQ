name: SonarCloud Debug

on:
  workflow_dispatch:

jobs:
  sonarcloud-debug:
    name: SonarCloud Debug
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Doppler CLI (if configured)
        if: ${{ secrets.DOPPLER_TOKEN != '' }}
        run: |
          curl -Ls https://cli.doppler.com/install.sh | sudo sh

      - name: Resolve SONAR_TOKEN (Doppler if present, else GitHub Secret)
        shell: bash
        run: |
          set -e
          SOURCE=""
          if [ -n "${{ secrets.DOPPLER_TOKEN }}" ]; then
            SONAR="$(doppler secrets get SONAR_TOKEN --project "${{ secrets.DOPPLER_PROJECT }}" --config "${{ secrets.DOPPLER_CONFIG }}" --plain --token "${{ secrets.DOPPLER_TOKEN }}" || true)"
            if [ -n "$SONAR" ]; then
              echo "SONAR_TOKEN source: Doppler"
              echo "SONAR_TOKEN=$SONAR" >> "$GITHUB_ENV"
              SOURCE="doppler"
            fi
          fi
          if [ -z "$SOURCE" ] && [ -n "${{ secrets.SONAR_TOKEN }}" ]; then
            echo "SONAR_TOKEN source: GitHub Secret"
            echo "SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}" >> "$GITHUB_ENV"
            SOURCE="secret"
          fi
          if [ -z "$SOURCE" ]; then
            echo "ERROR: SONAR_TOKEN not available from Doppler or GitHub secrets." >&2
            exit 1
          fi

      - name: Show basic debug info
        run: |
          echo "Ref: ${{ github.ref }} | Ref name: ${{ github.ref_name }} | Event: ${{ github.event_name }}"
          echo "Repo: ${{ github.repository }} | SHA: ${{ github.sha }}"
          ls -lah || true
          ls -lah frontend/coverage || true
          test -f coverage.xml && echo "Found backend coverage.xml" || echo "No backend coverage.xml"

      - name: SonarCloud Scan (Manual)
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=ruliq-compliance-platform
            -Dsonar.organization=omara1-bakri
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/.venv/**,**/htmlcov/**,**/coverage/**,**/.next/**,**/dist/**,**/build/**
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.javascript.lcov.reportPaths=frontend/coverage/lcov.info
            -Dsonar.branch.name=${{ github.ref_name }}
            -Dsonar.verbose=true
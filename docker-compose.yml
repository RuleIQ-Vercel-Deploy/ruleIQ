version: '3.8'

services:
  app:
    build: .
    container_name: ruleiq_app
    ports:
      - "8000:8000"
    environment:
      # Application configuration (override via environment/Doppler in CI/Prod)
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ruleiq
      - REDIS_URL=redis://redis:6379/0
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=neo4jpassword
      - JWT_SECRET=dev-local-secret
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      neo4j:
        condition: service_started
    volumes:
      - .:/app
    restart: unless-stopped
    command: sh -lc "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000"
    networks:
      - ruleiq

  test:
    build: .
    container_name: ruleiq_tests
    profiles: ["test"]
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ruleiq
      - REDIS_URL=redis://redis:6379/0
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=neo4jpassword
      - PYTHONUNBUFFERED=1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      neo4j:
        condition: service_started
    command: >
      sh -lc "alembic upgrade head && pytest -n auto --dist=worksteal --tb=short --maxfail=1"
    volumes:
      - .:/app
    networks:
      - ruleiq

  postgres:
    image: postgres:15-alpine
    container_name: ruleiq_postgres
    environment:
      - POSTGRES_DB=ruleiq
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ruleiq"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ruleiq

  redis:
    image: redis:7-alpine
    container_name: ruleiq_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ruleiq

  neo4j:
    image: neo4j:5.20.0-community
    container_name: ruleiq_neo4j
    environment:
      - NEO4J_AUTH=neo4j/neo4jpassword
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=512m
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - ruleiq

volumes:
  pg_data:
  redis_data:
  neo4j_data:
  neo4j_logs:

networks:
  ruleiq:
    driver: bridge
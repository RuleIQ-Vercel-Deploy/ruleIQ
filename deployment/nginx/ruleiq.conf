# Example Nginx config for ruleIQ API (non-Docker)
# - Proxies HTTPS traffic to local Gunicorn/Uvicorn at 127.0.0.1:8000
# - Redirects HTTP to HTTPS

upstream ruleiq_api {
    server 127.0.0.1:8000;
    keepalive 64;
}

server {
    listen 80;
    server_name your.domain.example;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name your.domain.example;

    # TLS (update to your certificate paths)
    ssl_certificate     /etc/ssl/certs/your_cert.pem;
    ssl_certificate_key /etc/ssl/private/your_key.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header Referrer-Policy "no-referrer-when-downgrade";
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()";
    add_header Content-Security-Policy "default-src 'self'; img-src 'self' data:;";

    # Health
    location = /health {
        proxy_pass http://ruleiq_api;
        access_log off;
    }

    # API
    location /api/ {
        proxy_pass http://ruleiq_api;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }

    # OpenAPI / Docs
    location /docs {
        proxy_pass http://ruleiq_api;
    }
    location /openapi.json {
        proxy_pass http://ruleiq_api;
    }

    # Root
    location = / {
        return 200 "OK";
        add_header Content-Type text/plain;
    }
}
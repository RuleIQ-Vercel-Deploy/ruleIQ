name: Deploy Frontend to Staging

on:
  push:
    branches:
      - develop
    paths:
      - "frontend/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # First, ensure the quality gates pass
  quality-check:
    uses: ./.github/workflows/quality-gates.yml

  # If quality gates pass, deploy to staging
  deploy-staging:
    needs: quality-check
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://staging.ruleiq.com # Placeholder URL
    # Removed duplicate environment key, as it's already set above.
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js and pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install

      - name: Validate Environment Variables
        run: node scripts/validate-env.mjs
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.STAGING_API_URL }}

      - name: Build application
        run: pnpm build
        env:
          # Example of setting staging-specific env vars
          NEXT_PUBLIC_API_URL: ${{ secrets.STAGING_API_URL }}

      - name: Deploy to Staging Environment
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "ðŸš€ Deploying to staging..."
          npx vercel-cli pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          npx vercel-cli build --token=${{ secrets.VERCEL_TOKEN }}
          npx vercel-cli deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

      - name: Run Smoke Tests
        run: |
          echo "ðŸ”¬ Running smoke tests..."
          # This is a placeholder for your smoke test script.
          # You might use a tool like 'curl' or a dedicated script to check critical endpoints.
          # curl -f https://staging.ruleiq.com/api/health
          echo "âœ… Smoke tests placeholder complete."


X"Companies Act"str
º"fire.?safety"str
±"derivatives"str
ë"proceeds.?crime"str
¢"markets.?financial"str
 ë"network.?information"str
»"environment"str
≠"ukpga/2015/4"str
À"pollution.?control"str
†"ukpga/2006/35"str
M"human.?trafficking"str
"personal.?data"str
Ñ"pecr"str
"ukpga/2018/12"str
 Ç"Criminal Justice Act"str
>"ukpga/2010/23"str
Ø"emir"str
 £"investment.?services"str
Y"companies.?act"str
t"HSWA"str
x"occupational.?health"str
!Õ"securities.?offerings"str
% "environmental.?protection"str
¿"securities.?lending"str
◊"ukpga/2023/50"str
K"modern.?slavery"str
"ukpga/2000/8"str
Á"competition"str
$î"critical.?infrastructure"str
Ö"tax.?evasion"str
Ã"eur/2017/1129"str
-"money.?laundering"str
ÿ"Benchmarks"str
ü"terrorism"str
&Ö"electronic.?communications"str
«"Environment Act"str
∞"eur/2012/648"str
‹"reference.?rates"str
Ë"ukpga/1998/41"str
Í
"monopoly"str
ÿ"harmful.?content"str
"fca"str
f"Equality Act"str
Æ"EMIR"str
 Æ"retirement.?benefits"str
@"anti.?bribery"str
°"eur/2014/596"str

"GDPR/DPA"str
h"ukpga/2010/15"str
i"discrimination"str
	"data.?protection"str
g
"equality"str
ê"Proceeds of Crime"str
î"confiscation"str
,"MLR"str
!Ω"securities.?financing"str
Ç"PECR"str
Ù"Enterprise Act"str
"consumer.?credit"str
Ü"criminal.?finances"str
!≤"clearing.?obligations"str
u"health.?safety"str
 Ω"construction.?safety"str
€"libor"str
„"Economic Crime Act"str
°"counter.?terrorism"str
…"ukpga/2021/31"str
÷"online.?safety"str
º"SFTR"str
"financial.?services"str
´°"
from __future__ import annotations
import logging
logger = logging.getLogger(__name__)

Categorize and map UK regulatory obligations to specific regulations.
"str
ì"asset.?recovery"str
"financial.?conduct"str
"FCA"str
."uksi/2017/692"str
È"anti.?competitive"str
Ñ"ukpga/2017/22"str
í"uksi/2018/506"str
/"anti.?money"str
´"Pensions Act"str
#Ê"corporate.?transparency"str
	"privacy"str
!¯"market.?investigation"str
?"corruption"str
ì"cyber.?security"str
v"hswa"str
Ê"Competition Act"str
\"director.?duties"str
w"workplace.?safety"str
%Ÿ"social.?media.?regulation"str
0"aml"str

"gdpr"str
N"forced.?labour"str
û
"MiFID II"str
∫"building.?safety"str
j"equal.?opportunities"str
Ü"uksi/2003/2426"str
 "ukpga/2021/22"str
ê"NIS"str
˜"merger.?control"str
†"eur/2014/600"str
˜
"__main__"str
É"privacy.?electronic"str
¨
"pensions"str
=	"bribery"str
ª"ukpga/2022/10"str
J"Modern Slavery Act"str
’"Online Safety Act"str
L"ukpga/2015/30"str
ˆ"ukpga/2002/40"str
æ"eur/2015/2365"str
NoneNoneType
ı"enterprise"str
À"prospectus"str
 ["corporate.?governance"str
⁄"eur/2016/1011"str
π"Building Safety Act"str
Â"ukpga/2022/46"str
í"ukpga/2002/29"str

0int
!Á"beneficial.?ownership"str
É"criminal.?justice"str
ü"mifid"str
‰"economic.?crime"str
 "Prospectus"str
ø"sftr"str
û"Terrorism Act"str
<"Bribery Act"str
Z"ukpga/2006/46"str
1"terrorist.?financing"str
Œ"public.?offerings"str
Ÿ"benchmark"str
Ø"pension.?schemes"strlist"ûP&
$
 (Path"?python-unknown?&
$
 ("Dict"?python-unknown?&
$
 ("List"?python-unknown?%
#
 ("Any"?python-unknown?*
(
 (datetime"?python-unknown?9
7
 3(REGULATION_PATTERNS"#new-object#Bdict'
%
# (1"#unknown-value#Blist&
$
# (1"
#is-exact#:Bbool

# (1"
#assume#:8
6
# (1"#set-field# __collection_size:Bint&
$
# (1"#array-add-last#:	&
$
# (1"#array-add-last#:
&
$
# (1"#array-add-last#:&
$
# (1"#array-add-last#:&
$
# (1"#array-add-last#: 

 (1"	#map-set#:'
%
: ((!"#unknown-value#Blist&
$
: ((""
#is-exact#:!Bbool

: ((#"
#assume#:"8
6
: (($"#set-field# __collection_size:!Bint&
$
: ((%"#array-add-last#:!&
$
: ((&"#array-add-last#:!&
$
: (('"#array-add-last#:!&
$
: ((("#array-add-last#:!&
$
: (()"#array-add-last#:!&
$
: ((*"#array-add-last#:!  

3 ((+"	#map-set#:!'
%
1 (B2"#unknown-value#Blist&
$
1 (B3"
#is-exact#:2Bbool

1 (B4"
#assume#:38
6
1 (B5"#set-field# __collection_size:2Bint&
$
1 (B6"#array-add-last#:2-&
$
1 (B7"#array-add-last#:2.&
$
1 (B8"#array-add-last#:2/&
$
1 (B9"#array-add-last#:20&
$
1 (B:"#array-add-last#:21 

* (B;"	#map-set#:,2'
%
 (A"#unknown-value#Blist&
$
 (B"
#is-exact#:ABbool

 (C"
#assume#:B8
6
 (D"#set-field# __collection_size:ABint&
$
 (E"#array-add-last#:A=&
$
 (F"#array-add-last#:A>&
$
 (G"#array-add-last#:A?&
$
 (H"#array-add-last#:A@ 

 (I"	#map-set#:<A'
%
, (<O"#unknown-value#Blist&
$
, (<P"
#is-exact#:OBbool

, (<Q"
#assume#:P8
6
, (<R"#set-field# __collection_size:OBint&
$
, (<S"#array-add-last#:OK&
$
, (<T"#array-add-last#:OL&
$
, (<U"#array-add-last#:OM&
$
, (<V"#array-add-last#:ON 

 (<W"	#map-set#:JO'
%
 (0]"#unknown-value#Blist&
$
 (0^"
#is-exact#:]Bbool

 (0_"
#assume#:^8
6
 (0`"#set-field# __collection_size:]Bint&
$
 (0a"#array-add-last#:]Y&
$
 (0b"#array-add-last#:]Z&
$
 (0c"#array-add-last#:][&
$
 (0d"#array-add-last#:]\ 

 (0e"	#map-set#:X]'
%
B (Jk"#unknown-value#Blist&
$
B (Jl"
#is-exact#:kBbool

B (Jm"
#assume#:l8
6
B (Jn"#set-field# __collection_size:kBint&
$
B (Jo"#array-add-last#:kg&
$
B (Jp"#array-add-last#:kh&
$
B (Jq"#array-add-last#:ki&
$
B (Jr"#array-add-last#:kj 

2 (Js"	#map-set#:fk'
%
 (y"#unknown-value#Blist&
$
 (z"
#is-exact#:yBbool

 ({"
#assume#:z8
6
 (|"#set-field# __collection_size:yBint&
$
 (}"#array-add-last#:yu&
$
 (~"#array-add-last#:yv&
$
 ("#array-add-last#:yw'
%
 (Ä"#array-add-last#:yx!

 (Å"	#map-set#:ty(
&
% (3á"#unknown-value#Blist(
&
% (3à"
#is-exact#:áBbool

% (3â"
#assume#:à:
8
% (3ä"#set-field# __collection_size:áBint)
'
% (3ã"#array-add-last#:áÉ)
'
% (3å"#array-add-last#:áÑ)
'
% (3ç"#array-add-last#:áÖ)
'
% (3é"#array-add-last#:áÜ#
!
 (3è"	#map-set#:Çá(
&
< (ï"#unknown-value#Blist(
&
< (ñ"
#is-exact#:ïBbool

< (ó"
#assume#:ñ:
8
< (ò"#set-field# __collection_size:ïBint)
'
< (ô"#array-add-last#:ïë)
'
< (ö"#array-add-last#:ïí)
'
< (õ"#array-add-last#:ïì)
'
< (ú"#array-add-last#:ïî#
!
5 (ù"	#map-set#:êï(
&
- (A§"#unknown-value#Blist(
&
- (A•"
#is-exact#:§Bbool

- (A¶"
#assume#:•:
8
- (Aß"#set-field# __collection_size:§Bint)
'
- (A®"#array-add-last#:§ü)
'
- (A©"#array-add-last#:§†)
'
- (A™"#array-add-last#:§°)
'
- (A´"#array-add-last#:§¢)
'
- (A¨"#array-add-last#:§£#
!
! (A≠"	#map-set#:û§(
&
 (D≥"#unknown-value#Blist(
&
 (D¥"
#is-exact#:≥Bbool

 (Dµ"
#assume#:¥:
8
 (D∂"#set-field# __collection_size:≥Bint)
'
 (D∑"#array-add-last#:≥Ø)
'
 (D∏"#array-add-last#:≥∞)
'
 (Dπ"#array-add-last#:≥±)
'
 (D∫"#array-add-last#:≥≤#
!
C (Dª"	#map-set#:Æ≥(
&
  !(¡"#unknown-value#Blist(
&
  !(¬"
#is-exact#:¡Bbool

  !(√"
#assume#:¬:
8
  !(ƒ"#set-field# __collection_size:¡Bint)
'
  !(≈"#array-add-last#:¡Ω)
'
  !(∆"#array-add-last#:¡æ)
'
  !(«"#array-add-last#:¡ø)
'
  !(»"#array-add-last#:¡¿#
!
  !(…"	#map-set#:º¡(
&
!* "(1œ"#unknown-value#Blist(
&
!* "(1–"
#is-exact#:œBbool

!* "(1—"
#assume#:–:
8
!* "(1“"#set-field# __collection_size:œBint)
'
!* "(1”"#array-add-last#:œÀ)
'
!* "(1‘"#array-add-last#:œÃ)
'
!* "(1’"#array-add-last#:œÕ)
'
!* "(1÷"#array-add-last#:œŒ#
!
! "(1◊"	#map-set#: œ(
&
"A #(>›"#unknown-value#Blist(
&
"A #(>ﬁ"
#is-exact#:›Bbool

"A #(>ﬂ"
#assume#:ﬁ:
8
"A #(>‡"#set-field# __collection_size:›Bint)
'
"A #(>·"#array-add-last#:›Ÿ)
'
"A #(>‚"#array-add-last#:›⁄)
'
"A #(>„"#array-add-last#:›€)
'
"A #(>‰"#array-add-last#:›‹#
!
"3 #(>Â"	#map-set#:ÿ›(
&
$ %(Î"#unknown-value#Blist(
&
$ %(Ï"
#is-exact#:ÎBbool

$ %(Ì"
#assume#:Ï:
8
$ %(Ó"#set-field# __collection_size:ÎBint)
'
$ %(Ô"#array-add-last#:ÎÁ)
'
$ %("#array-add-last#:ÎË)
'
$ %(Ò"#array-add-last#:ÎÈ)
'
$ %(Ú"#array-add-last#:ÎÍ#
!
$ %(Û"	#map-set#:ÊÎ(
&
%# &(/˘"#unknown-value#Blist(
&
%# &(/˙"
#is-exact#:˘Bbool

%# &(/˚"
#assume#:˙:
8
%# &(/¸"#set-field# __collection_size:˘Bint)
'
%# &(/˝"#array-add-last#:˘ı)
'
%# &(/˛"#array-add-last#:˘ˆ)
'
%# &(/ˇ"#array-add-last#:˘˜)
'
%# &(/Ä"#array-add-last#:˘¯#
!
% &(/Å"	#map-set#:Ù˘(
&
&I ((á"#unknown-value#Blist(
&
&I ((à"
#is-exact#:áBbool

&I ((â"
#assume#:à:
8
&I ((ä"#set-field# __collection_size:áBint)
'
&I ((ã"#array-add-last#:áÉ)
'
&I ((å"#array-add-last#:áÑ)
'
&I ((ç"#array-add-last#:áÖ)
'
&I ((é"#array-add-last#:áÜ#
!
&1 ((è"	#map-set#:Çá(
&
(0 )(7ï"#unknown-value#Blist(
&
(0 )(7ñ"
#is-exact#:ïBbool

(0 )(7ó"
#assume#:ñ:
8
(0 )(7ò"#set-field# __collection_size:ïBint)
'
(0 )(7ô"#array-add-last#:ïë)
'
(0 )(7ö"#array-add-last#:ïí)
'
(0 )(7õ"#array-add-last#:ïì)
'
(0 )(7ú"#array-add-last#:ïî#
!
( )(7ù"	#map-set#:êï(
&
)J +(¢"#unknown-value#Blist(
&
)J +(£"
#is-exact#:¢Bbool

)J +(§"
#assume#:£:
8
)J +(•"#set-field# __collection_size:¢Bint)
'
)J +(¶"#array-add-last#:¢ü)
'
)J +(ß"#array-add-last#:¢†)
'
)J +(®"#array-add-last#:¢°(
&
)J +(©"#array-add-last#:¢1#
!
)9 +(™"	#map-set#:û¢(
&
+- ,(/∞"#unknown-value#Blist(
&
+- ,(/±"
#is-exact#:∞Bbool

+- ,(/≤"
#assume#:±:
8
+- ,(/≥"#set-field# __collection_size:∞Bint)
'
+- ,(/¥"#array-add-last#:∞¨)
'
+- ,(/µ"#array-add-last#:∞≠)
'
+- ,(/∂"#array-add-last#:∞Æ)
'
+- ,(/∑"#array-add-last#:∞Ø#
!
+ ,(/∏"	#map-set#:´∞(
&
,H .(æ"#unknown-value#Blist(
&
,H .(ø"
#is-exact#:æBbool

,H .(¿"
#assume#:ø:
8
,H .(¡"#set-field# __collection_size:æBint)
'
,H .(¬"#array-add-last#:æ∫)
'
,H .(√"#array-add-last#:æª)
'
,H .(ƒ"#array-add-last#:æº)
'
,H .(≈"#array-add-last#:æΩ#
!
,1 .(∆"	#map-set#:πæ(
&
.0 /(GÃ"#unknown-value#Blist(
&
.0 /(GÕ"
#is-exact#:ÃBbool

.0 /(GŒ"
#assume#:Õ:
8
.0 /(Gœ"#set-field# __collection_size:ÃBint)
'
.0 /(G–"#array-add-last#:Ã»)
'
.0 /(G—"#array-add-last#:Ã…)
'
.0 /(G“"#array-add-last#:Ã )
'
.0 /(G”"#array-add-last#:ÃÀ#
!
. /(G‘"	#map-set#:«Ã(
&
0 1(4⁄"#unknown-value#Blist(
&
0 1(4€"
#is-exact#:⁄Bbool

0 1(4‹"
#assume#:€:
8
0 1(4›"#set-field# __collection_size:⁄Bint)
'
0 1(4ﬁ"#array-add-last#:⁄÷)
'
0 1(4ﬂ"#array-add-last#:⁄◊)
'
0 1(4‡"#array-add-last#:⁄ÿ)
'
0 1(4·"#array-add-last#:⁄Ÿ#
!
0 1(4‚"	#map-set#:’⁄(
&
2 3(Ë"#unknown-value#Blist(
&
2 3(È"
#is-exact#:ËBbool

2 3(Í"
#assume#:È:
8
2 3(Î"#set-field# __collection_size:ËBint)
'
2 3(Ï"#array-add-last#:Ë‰)
'
2 3(Ì"#array-add-last#:ËÂ)
'
2 3(Ó"#array-add-last#:ËÊ)
'
2 3(Ô"#array-add-last#:ËÁ#
!
16 3("	#map-set#:„Ë%
#
6 QÒ%closure"#new-object#$
"
6 QÚ"#set-field# Dict:Ò#
!
6 QÛ"#set-field# Any:Ò3
1
6 QÙ"!#set-field# REGULATION_PATTERNS:Ò)
'
6 Qı"?python-partial-apply?:Ò$
"

∞ ∞(ˆ"#unknown-value#/
-

∞ ∞(¯"
#binop ==#2==:ˆ˜Bbool"

∞ ∞(¯ *∞ ∞("F<
:

± ±(
˘")
!scripts.categorize_uk_obligationsmain" *@/home/omar/Documents/ruleIQ/scripts/categorize_uk_obligations.py
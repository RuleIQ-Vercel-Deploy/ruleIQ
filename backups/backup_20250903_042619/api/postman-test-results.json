{
  "collection": {
    "item": [
      {
        "id": "e54a9c51-7907-4a08-80b0-811e6df8deb3",
        "name": "1. Health Checks",
        "item": [
          {
            "id": "d77474b6-c972-4594-b9f1-ba202d1a8cc4",
            "name": "Root Health Check",
            "request": {
              "url": {
                "path": [
                  "health"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "673d8ce7-0ce5-4a2d-be3f-fd8cd812cb01",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Status is 200', function() {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Health status is healthy', function() {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.status).to.eql('healthy');",
                    "});",
                    "",
                    "pm.test('Database is connected', function() {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.database.engine_initialized).to.be.true;",
                    "});"
                  ],
                  "_lastExecutionId": "a02fa6a4-4bde-4ab9-9bb0-55594e1d7551"
                }
              }
            ]
          },
          {
            "id": "dcfb3c46-11c6-478d-b517-720220bbeb4c",
            "name": "API Health Check",
            "request": {
              "url": {
                "path": [
                  "api",
                  "v1",
                  "health"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "42fd082c-af6c-47f0-8d30-a6b98b236fba",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Status is 200', function() {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('API version present', function() {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.version).to.exist;",
                    "});"
                  ],
                  "_lastExecutionId": "c5f2763b-c2aa-470e-9ed4-e088c39e7156"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "53f76b64-609f-47a2-9e75-ed11af434456",
        "name": "2. Authentication Flow",
        "item": [
          {
            "id": "70ddd9ec-cc7c-4b80-b3a0-073f5f208cf5",
            "name": "Login",
            "request": {
              "url": {
                "path": [
                  "api",
                  "v1",
                  "auth",
                  "login"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\"email\": \"newtest@ruleiq.com\", \"password\": \"NewTestPass123!\"}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7aa03f92-e7c0-4f38-a1e3-9eed3ef04ed7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Login successful', function() {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('JWT token received', function() {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.access_token).to.exist;",
                    "    pm.collectionVariables.set('jwt_token', response.access_token);",
                    "});",
                    "",
                    "pm.test('Token type is bearer', function() {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.token_type).to.eql('bearer');",
                    "});"
                  ],
                  "_lastExecutionId": "2bfe37fd-a6a8-4ae8-a1e4-c1660717e4dc"
                }
              }
            ]
          },
          {
            "id": "b5d2574f-951f-4ae5-9374-6a6e1addeeb8",
            "name": "Get Current User",
            "request": {
              "url": {
                "path": [
                  "api",
                  "v1",
                  "auth",
                  "me"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{jwt_token}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "94a574b4-2346-461e-adaa-957c8d04f7b7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('User retrieved or known error', function() {",
                    "    pm.expect([200, 500]).to.include(pm.response.code);",
                    "});",
                    "",
                    "if (pm.response.code === 200) {",
                    "    pm.test('User email matches', function() {",
                    "        const response = pm.response.json();",
                    "        pm.expect(response.email).to.eql('newtest@ruleiq.com');",
                    "        pm.collectionVariables.set('user_id', response.id);",
                    "    });",
                    "}"
                  ],
                  "_lastExecutionId": "ba89a25e-632a-4ac2-bf64-2b897983cc05"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5b0acf8f-dd6b-4f79-961a-6c02ae036045",
        "name": "3. Freemium Features",
        "item": [
          {
            "id": "03174b04-9777-4451-8158-e5d68821b99e",
            "name": "Capture Lead",
            "request": {
              "url": {
                "path": [
                  "api",
                  "v1",
                  "freemium",
                  "leads"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\"email\": \"test_{{timestamp}}@example.com\", \"utm_source\": \"postman\", \"utm_medium\": \"api_test\"}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1fee2d73-b830-4fc7-926e-056b4cd91724",
                  "type": "text/javascript",
                  "exec": [
                    "pm.collectionVariables.set('timestamp', Date.now());"
                  ],
                  "_lastExecutionId": "6f3b9468-cd24-4e33-8697-dfd6bd6925ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "724fad9a-9857-4502-acf9-9f23c822c16b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Lead created', function() {",
                    "    pm.response.to.have.status(201);",
                    "});",
                    "",
                    "pm.test('Lead ID received', function() {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.lead_id).to.exist;",
                    "    pm.collectionVariables.set('lead_id', response.lead_id);",
                    "});",
                    "",
                    "pm.test('Lead score calculated', function() {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.lead_score).to.be.a('number');",
                    "});"
                  ],
                  "_lastExecutionId": "4efa2086-cedf-49e0-a9e3-b8c75f066e7a"
                }
              }
            ]
          },
          {
            "id": "f7a20dea-4503-4b2c-adfa-19fa9b37e9b6",
            "name": "Freemium Health",
            "request": {
              "url": {
                "path": [
                  "api",
                  "v1",
                  "freemium",
                  "health"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3192fd69-c33f-4afc-864e-35029e91246e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Freemium service healthy', function() {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Database connected', function() {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.database).to.eql('connected');",
                    "});",
                    "",
                    "pm.test('Leads count exists', function() {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.leads_count).to.be.a('number');",
                    "});"
                  ],
                  "_lastExecutionId": "28da22a7-0baa-428c-84fb-ca86c44cdf22"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dc9c7afd-d160-47f5-9ff0-9e8d26887d7e",
        "name": "4. IQ Agent",
        "item": [
          {
            "id": "2446a011-81ea-40b2-9e69-14e242bfcc15",
            "name": "IQ Agent Health",
            "request": {
              "url": {
                "path": [
                  "api",
                  "v1",
                  "iq-agent",
                  "health"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "12867098-a0b9-45f9-a671-bfd80cee522d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('IQ Agent health check successful', function() {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Success flag present', function() {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.success).to.exist;",
                    "});"
                  ],
                  "_lastExecutionId": "63332242-c267-4366-b45f-ef2dc06b108a"
                }
              }
            ]
          },
          {
            "id": "323f572d-5883-46a0-9467-a29d4977a386",
            "name": "IQ Agent Status",
            "request": {
              "url": {
                "path": [
                  "api",
                  "v1",
                  "iq-agent",
                  "status"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "11517e8f-d8ee-4439-b0df-e6f50f618a77",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Status check successful', function() {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Agent status present', function() {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.status).to.exist;",
                    "    pm.expect(['healthy', 'degraded', 'unhealthy']).to.include(response.status);",
                    "});"
                  ],
                  "_lastExecutionId": "914d6167-bfbb-45c6-8e56-b7f3d80a7aa3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ff20e49f-85a8-4a07-a0c2-077c91e044fd",
        "name": "5. Protected Endpoints",
        "item": [
          {
            "id": "38db6ae6-a5c7-426d-8623-051ad72cae3c",
            "name": "Business Profiles (Should 401)",
            "request": {
              "url": {
                "path": [
                  "api",
                  "v1",
                  "business-profiles",
                  ""
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{jwt_token}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "34f97c02-5d26-4e4b-9104-abd0b701108d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Protected endpoint returns 401', function() {",
                    "    pm.response.to.have.status(401);",
                    "});",
                    "",
                    "pm.test('Error message present', function() {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.detail).to.exist;",
                    "});"
                  ],
                  "_lastExecutionId": "95978ae7-237e-4198-9637-c88557039605"
                }
              }
            ]
          },
          {
            "id": "64667340-7680-4d36-9f95-447aa27454dc",
            "name": "Assessments (Should 401)",
            "request": {
              "url": {
                "path": [
                  "api",
                  "v1",
                  "assessments",
                  ""
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Bearer {{jwt_token}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "922a8774-a1dc-433b-87e9-b3cefed8780b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Protected endpoint returns 401', function() {",
                    "    pm.response.to.have.status(401);",
                    "});"
                  ],
                  "_lastExecutionId": "46aee322-eab3-4b70-8aad-161e29caaf66"
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [
      {
        "type": "any",
        "value": "http://localhost:8000",
        "key": "base_url"
      },
      {
        "type": "any",
        "value": "",
        "key": "jwt_token"
      },
      {
        "type": "any",
        "value": "",
        "key": "user_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "lead_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "timestamp"
      }
    ],
    "info": {
      "_postman_id": "975ef816-d18e-4e09-8eab-ba63cba7f29e",
      "name": "RuleIQ API Comprehensive Tests",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Full API test suite with assertions",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "b263a4c3-8b94-49ef-9ebc-b69a1924123c",
    "values": []
  },
  "globals": {
    "id": "401b2edb-d862-4c69-a200-18b9ec34cb16",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 11,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 23,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 1225.3,
      "responseMin": 5,
      "responseMax": 3595,
      "responseSd": 1224.8697930800645,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1755963645143,
      "completed": 1755963657687
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e6225b3c-d082-40c6-b6d2-ffa96470707b",
          "httpRequestId": "6cd6e5e2-5bd6-4dd5-b2dc-b07a5c7741c8"
        },
        "item": {
          "id": "d77474b6-c972-4594-b9f1-ba202d1a8cc4",
          "name": "Root Health Check",
          "request": {
            "url": {
              "path": [
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "673d8ce7-0ce5-4a2d-be3f-fd8cd812cb01",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status is 200', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Health status is healthy', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.status).to.eql('healthy');",
                  "});",
                  "",
                  "pm.test('Database is connected', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.database.engine_initialized).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "a02fa6a4-4bde-4ab9-9bb0-55594e1d7551"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "health"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "27ff73f5-1846-4810-ad51-cd0d39803328",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "cfe3c720-2189-4d7e-a72c-e44ca573e0ce",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sat, 23 Aug 2025 15:40:44 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "248"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-request-id",
              "value": "786c667b-3257-4d85-a73f-d747267b8788"
            },
            {
              "key": "x-process-time",
              "value": "0.34205150604248047"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-frame-options",
              "value": "DENY"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "content-security-policy",
              "value": "default-src 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "permissions-policy",
              "value": "geolocation=(), microphone=(), camera=()"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              104,
              101,
              97,
              108,
              116,
              104,
              121,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              108,
              108,
              32,
              115,
              121,
              115,
              116,
              101,
              109,
              115,
              32,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              97,
              108,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              51,
              84,
              49,
              53,
              58,
              52,
              48,
              58,
              52,
              53,
              46,
              53,
              50,
              55,
              55,
              49,
              48,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              46,
              48,
              46,
              48,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              98,
              97,
              115,
              101,
              34,
              58,
              123,
              34,
              101,
              110,
              103,
              105,
              110,
              101,
              95,
              105,
              110,
              105,
              116,
              105,
              97,
              108,
              105,
              122,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              112,
              111,
              111,
              108,
              95,
              117,
              116,
              105,
              108,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              48,
              44,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              95,
              115,
              101,
              115,
              115,
              105,
              111,
              110,
              115,
              34,
              58,
              48,
              44,
              34,
              114,
              101,
              99,
              101,
              110,
              116,
              95,
              97,
              108,
              101,
              114,
              116,
              115,
              34,
              58,
              123,
              34,
              99,
              114,
              105,
              116,
              105,
              99,
              97,
              108,
              34,
              58,
              48,
              44,
              34,
              119,
              97,
              114,
              110,
              105,
              110,
              103,
              34,
              58,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              34,
              58,
              48,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 380,
          "responseSize": 248
        },
        "id": "d77474b6-c972-4594-b9f1-ba202d1a8cc4",
        "assertions": [
          {
            "assertion": "Status is 200",
            "skipped": false
          },
          {
            "assertion": "Health status is healthy",
            "skipped": false
          },
          {
            "assertion": "Database is connected",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ddd4acbd-2222-4eb5-96bd-08f5354bdf72",
          "length": 10,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "77723b08-e34c-42ca-a74c-e946d59e70fe"
        },
        "item": {
          "id": "dcfb3c46-11c6-478d-b517-720220bbeb4c",
          "name": "API Health Check",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "42fd082c-af6c-47f0-8d30-a6b98b236fba",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status is 200', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('API version present', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.version).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "c5f2763b-c2aa-470e-9ed4-e088c39e7156"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v1",
              "health"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b0b4fbe3-e738-4c0e-a46a-c2e791c21dcc",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "e10a84d2-cb39-4f55-a37d-d60d93c36efc",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sat, 23 Aug 2025 15:40:44 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "126"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-request-id",
              "value": "d0c66be4-7db7-4d95-9f3b-c365614d3956"
            },
            {
              "key": "x-process-time",
              "value": "0.0017476081848144531"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-frame-options",
              "value": "DENY"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "content-security-policy",
              "value": "default-src 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "permissions-policy",
              "value": "geolocation=(), microphone=(), camera=()"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              104,
              101,
              97,
              108,
              116,
              104,
              121,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              80,
              73,
              32,
              118,
              49,
              32,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              97,
              108,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              51,
              84,
              49,
              53,
              58,
              52,
              48,
              58,
              52,
              53,
              46,
              53,
              57,
              51,
              51,
              56,
              54,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              50,
              46,
              48,
              46,
              48,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              98,
              97,
              115,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              125
            ]
          },
          "cookie": [],
          "responseTime": 8,
          "responseSize": 126
        },
        "id": "dcfb3c46-11c6-478d-b517-720220bbeb4c",
        "assertions": [
          {
            "assertion": "Status is 200",
            "skipped": false
          },
          {
            "assertion": "API version present",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e24a870d-11bf-42aa-b160-2a9ca55608f5",
          "length": 10,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e79973fe-1e34-4de1-94c7-f6dee3574fc4"
        },
        "item": {
          "id": "70ddd9ec-cc7c-4b80-b3a0-073f5f208cf5",
          "name": "Login",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "auth",
                "login"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"email\": \"newtest@ruleiq.com\", \"password\": \"NewTestPass123!\"}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7aa03f92-e7c0-4f38-a1e3-9eed3ef04ed7",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Login successful', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('JWT token received', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.exist;",
                  "    pm.collectionVariables.set('jwt_token', response.access_token);",
                  "});",
                  "",
                  "pm.test('Token type is bearer', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.token_type).to.eql('bearer');",
                  "});"
                ],
                "_lastExecutionId": "2bfe37fd-a6a8-4ae8-a1e4-c1660717e4dc"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v1",
              "auth",
              "login"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "877ce792-a00c-4fb0-8fd7-89c4713166ca",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "62",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"email\": \"newtest@ruleiq.com\", \"password\": \"NewTestPass123!\"}"
          }
        },
        "response": {
          "id": "b11ff08d-f06c-42f5-8a30-66fe45ca9c66",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sat, 23 Aug 2025 15:40:44 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "480"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-request-id",
              "value": "0611a5d2-3f00-4a95-bb6b-6bd990835a4b"
            },
            {
              "key": "x-process-time",
              "value": "0.6668777465820312"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-frame-options",
              "value": "DENY"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "content-security-policy",
              "value": "default-src 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "permissions-policy",
              "value": "geolocation=(), microphone=(), camera=()"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              99,
              99,
              101,
              115,
              115,
              95,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              101,
              121,
              74,
              104,
              98,
              71,
              99,
              105,
              79,
              105,
              74,
              73,
              85,
              122,
              73,
              49,
              78,
              105,
              73,
              115,
              73,
              110,
              82,
              53,
              99,
              67,
              73,
              54,
              73,
              107,
              112,
              88,
              86,
              67,
              74,
              57,
              46,
              101,
              121,
              74,
              122,
              100,
              87,
              73,
              105,
              79,
              105,
              74,
              108,
              79,
              84,
              104,
              108,
              77,
              106,
              103,
              119,
              77,
              83,
              48,
              49,
              89,
              84,
              86,
              109,
              76,
              84,
              82,
              105,
              78,
              68,
              85,
              116,
              89,
              87,
              82,
              105,
              90,
              105,
              49,
              107,
              89,
              50,
              85,
              50,
              89,
              87,
              77,
              120,
              78,
              71,
              89,
              50,
              89,
              106,
              69,
              105,
              76,
              67,
              74,
              108,
              101,
              72,
              65,
              105,
              79,
              106,
              69,
              51,
              78,
              84,
              85,
              53,
              78,
              106,
              85,
              48,
              78,
              68,
              89,
              115,
              73,
              110,
              82,
              53,
              99,
              71,
              85,
              105,
              79,
              105,
              74,
              104,
              89,
              50,
              78,
              108,
              99,
              51,
              77,
              105,
              76,
              67,
              74,
              112,
              89,
              88,
              81,
              105,
              79,
              106,
              69,
              51,
              78,
              84,
              85,
              53,
              78,
              106,
              77,
              50,
              78,
              68,
              90,
              57,
              46,
              103,
              49,
              74,
              108,
              122,
              71,
              50,
              117,
              71,
              50,
              51,
              77,
              111,
              69,
              122,
              101,
              50,
              90,
              95,
              68,
              85,
              86,
              85,
              56,
              109,
              74,
              57,
              98,
              81,
              83,
              95,
              99,
              112,
              105,
              45,
              98,
              80,
              104,
              45,
              102,
              121,
              109,
              69,
              34,
              44,
              34,
              114,
              101,
              102,
              114,
              101,
              115,
              104,
              95,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              101,
              121,
              74,
              104,
              98,
              71,
              99,
              105,
              79,
              105,
              74,
              73,
              85,
              122,
              73,
              49,
              78,
              105,
              73,
              115,
              73,
              110,
              82,
              53,
              99,
              67,
              73,
              54,
              73,
              107,
              112,
              88,
              86,
              67,
              74,
              57,
              46,
              101,
              121,
              74,
              122,
              100,
              87,
              73,
              105,
              79,
              105,
              74,
              108,
              79,
              84,
              104,
              108,
              77,
              106,
              103,
              119,
              77,
              83,
              48,
              49,
              89,
              84,
              86,
              109,
              76,
              84,
              82,
              105,
              78,
              68,
              85,
              116,
              89,
              87,
              82,
              105,
              90,
              105,
              49,
              107,
              89,
              50,
              85,
              50,
              89,
              87,
              77,
              120,
              78,
              71,
              89,
              50,
              89,
              106,
              69,
              105,
              76,
              67,
              74,
              108,
              101,
              72,
              65,
              105,
              79,
              106,
              69,
              51,
              78,
              84,
              89,
              49,
              78,
              106,
              103,
              48,
              78,
              68,
              89,
              115,
              73,
              110,
              82,
              53,
              99,
              71,
              85,
              105,
              79,
              105,
              74,
              121,
              90,
              87,
              90,
              121,
              90,
              88,
              78,
              111,
              73,
              105,
              119,
              105,
              97,
              87,
              70,
              48,
              73,
              106,
              111,
              120,
              78,
              122,
              85,
              49,
              79,
              84,
              89,
              122,
              78,
              106,
              81,
              50,
              102,
              81,
              46,
              115,
              54,
              56,
              106,
              117,
              113,
              102,
              106,
              112,
              112,
              99,
              107,
              100,
              103,
              70,
              72,
              119,
              111,
              107,
              111,
              79,
              114,
              121,
              90,
              97,
              106,
              85,
              113,
              121,
              80,
              95,
              89,
              109,
              121,
              84,
              49,
              55,
              84,
              115,
              89,
              50,
              100,
              52,
              34,
              44,
              34,
              116,
              111,
              107,
              101,
              110,
              95,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              98,
              101,
              97,
              114,
              101,
              114,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 678,
          "responseSize": 480
        },
        "id": "70ddd9ec-cc7c-4b80-b3a0-073f5f208cf5",
        "assertions": [
          {
            "assertion": "Login successful",
            "skipped": false
          },
          {
            "assertion": "JWT token received",
            "skipped": false
          },
          {
            "assertion": "Token type is bearer",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "35d6e5f1-b1c9-4f9d-9351-9a58ce669e8b",
          "length": 10,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "68bc5e44-a3c1-4edb-9bd6-93c1d4ad9912"
        },
        "item": {
          "id": "b5d2574f-951f-4ae5-9374-6a6e1addeeb8",
          "name": "Get Current User",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "auth",
                "me"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "94a574b4-2346-461e-adaa-957c8d04f7b7",
                "type": "text/javascript",
                "exec": [
                  "pm.test('User retrieved or known error', function() {",
                  "    pm.expect([200, 500]).to.include(pm.response.code);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    pm.test('User email matches', function() {",
                  "        const response = pm.response.json();",
                  "        pm.expect(response.email).to.eql('newtest@ruleiq.com');",
                  "        pm.collectionVariables.set('user_id', response.id);",
                  "    });",
                  "}"
                ],
                "_lastExecutionId": "ba89a25e-632a-4ac2-bf64-2b897983cc05"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v1",
              "auth",
              "me"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJlOThlMjgwMS01YTVmLTRiNDUtYWRiZi1kY2U2YWMxNGY2YjEiLCJleHAiOjE3NTU5NjU0NDYsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTU5NjM2NDZ9.g1JlzG2uG23MoEze2Z_DUVU8mJ9bQS_cpi-bPh-fymE"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "79a5ecbf-10ac-4f95-8695-2a2608e13464",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "04eaaaf9-02e7-4181-bfd0-d47e21f81728",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sat, 23 Aug 2025 15:40:45 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "133"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-request-id",
              "value": "f5462fc7-4e42-488b-b53b-08338d707ed9"
            },
            {
              "key": "x-process-time",
              "value": "0.7023379802703857"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-frame-options",
              "value": "DENY"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "content-security-policy",
              "value": "default-src 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "permissions-policy",
              "value": "geolocation=(), microphone=(), camera=()"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              110,
              101,
              119,
              116,
              101,
              115,
              116,
              64,
              114,
              117,
              108,
              101,
              105,
              113,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              101,
              57,
              56,
              101,
              50,
              56,
              48,
              49,
              45,
              53,
              97,
              53,
              102,
              45,
              52,
              98,
              52,
              53,
              45,
              97,
              100,
              98,
              102,
              45,
              100,
              99,
              101,
              54,
              97,
              99,
              49,
              52,
              102,
              54,
              98,
              49,
              34,
              44,
              34,
              105,
              115,
              95,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              51,
              84,
              48,
              51,
              58,
              49,
              48,
              58,
              50,
              54,
              46,
              51,
              49,
              55,
              54,
              54,
              56,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1569,
          "responseSize": 133
        },
        "id": "b5d2574f-951f-4ae5-9374-6a6e1addeeb8",
        "assertions": [
          {
            "assertion": "User retrieved or known error",
            "skipped": false
          },
          {
            "assertion": "User email matches",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "db88bec6-3ebf-4d63-9968-2094a24ae541",
          "length": 10,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1b8a4f2a-a705-4065-94b8-b817b2d1ae19"
        },
        "item": {
          "id": "03174b04-9777-4451-8158-e5d68821b99e",
          "name": "Capture Lead",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "freemium",
                "leads"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"email\": \"test_{{timestamp}}@example.com\", \"utm_source\": \"postman\", \"utm_medium\": \"api_test\"}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "1fee2d73-b830-4fc7-926e-056b4cd91724",
                "type": "text/javascript",
                "exec": [
                  "pm.collectionVariables.set('timestamp', Date.now());"
                ],
                "_lastExecutionId": "6f3b9468-cd24-4e33-8697-dfd6bd6925ca"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "724fad9a-9857-4502-acf9-9f23c822c16b",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Lead created', function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Lead ID received', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.lead_id).to.exist;",
                  "    pm.collectionVariables.set('lead_id', response.lead_id);",
                  "});",
                  "",
                  "pm.test('Lead score calculated', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.lead_score).to.be.a('number');",
                  "});"
                ],
                "_lastExecutionId": "4efa2086-cedf-49e0-a9e3-b8c75f066e7a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v1",
              "freemium",
              "leads"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e97bcb13-2d57-4a05-a4b9-1fd718b4e869",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "94",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"email\": \"test_1755963647917@example.com\", \"utm_source\": \"postman\", \"utm_medium\": \"api_test\"}"
          }
        },
        "response": {
          "id": "f6905f48-35a0-4a1b-af7d-b67a9866ccca",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "date",
              "value": "Sat, 23 Aug 2025 15:40:45 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "170"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-request-id",
              "value": "f2fd9c4e-409d-4377-9ae5-6f77c1eeccda"
            },
            {
              "key": "x-process-time",
              "value": "2.390709638595581"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-frame-options",
              "value": "DENY"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "content-security-policy",
              "value": "default-src 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "permissions-policy",
              "value": "geolocation=(), microphone=(), camera=()"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              108,
              101,
              97,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              102,
              51,
              101,
              53,
              55,
              102,
              49,
              99,
              45,
              54,
              101,
              52,
              101,
              45,
              52,
              50,
              51,
              49,
              45,
              56,
              51,
              50,
              99,
              45,
              54,
              50,
              52,
              48,
              52,
              101,
              50,
              57,
              50,
              99,
              97,
              101,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              95,
              49,
              55,
              53,
              53,
              57,
              54,
              51,
              54,
              52,
              55,
              57,
              49,
              55,
              64,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              108,
              101,
              97,
              100,
              95,
              115,
              99,
              111,
              114,
              101,
              34,
              58,
              50,
              48,
              44,
              34,
              108,
              101,
              97,
              100,
              95,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              99,
              111,
              108,
              100,
              34,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              95,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              51,
              84,
              49,
              53,
              58,
              52,
              48,
              58,
              52,
              56,
              46,
              50,
              51,
              52,
              56,
              57,
              49,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2399,
          "responseSize": 170
        },
        "id": "03174b04-9777-4451-8158-e5d68821b99e",
        "assertions": [
          {
            "assertion": "Lead created",
            "skipped": false
          },
          {
            "assertion": "Lead ID received",
            "skipped": false
          },
          {
            "assertion": "Lead score calculated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8843df8a-947f-4244-8d4e-381d75c01406",
          "length": 10,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c1daa2f4-6093-4f89-a87f-3e971b5c07dd"
        },
        "item": {
          "id": "f7a20dea-4503-4b2c-adfa-19fa9b37e9b6",
          "name": "Freemium Health",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "freemium",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3192fd69-c33f-4afc-864e-35029e91246e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Freemium service healthy', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Database connected', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.database).to.eql('connected');",
                  "});",
                  "",
                  "pm.test('Leads count exists', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.leads_count).to.be.a('number');",
                  "});"
                ],
                "_lastExecutionId": "28da22a7-0baa-428c-84fb-ca86c44cdf22"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v1",
              "freemium",
              "health"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "32e98b1b-0228-4fa8-a6fa-e00778821d27",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "fbd8c73c-2cde-4208-aaba-92cb4a8ed980",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sat, 23 Aug 2025 15:40:49 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "139"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-request-id",
              "value": "cc664a52-224f-4b84-9467-32a24bf091db"
            },
            {
              "key": "x-process-time",
              "value": "0.868776798248291"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-frame-options",
              "value": "DENY"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "content-security-policy",
              "value": "default-src 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "permissions-policy",
              "value": "geolocation=(), microphone=(), camera=()"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              104,
              101,
              97,
              108,
              116,
              104,
              121,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              51,
              84,
              49,
              53,
              58,
              52,
              48,
              58,
              53,
              49,
              46,
              49,
              51,
              54,
              56,
              56,
              52,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              98,
              97,
              115,
              101,
              34,
              58,
              34,
              99,
              111,
              110,
              110,
              101,
              99,
              116,
              101,
              100,
              34,
              44,
              34,
              108,
              101,
              97,
              100,
              115,
              95,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              53,
              57,
              44,
              34,
              115,
              101,
              115,
              115,
              105,
              111,
              110,
              115,
              95,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              57,
              51,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              46,
              48,
              46,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 874,
          "responseSize": 139
        },
        "id": "f7a20dea-4503-4b2c-adfa-19fa9b37e9b6",
        "assertions": [
          {
            "assertion": "Freemium service healthy",
            "skipped": false
          },
          {
            "assertion": "Database connected",
            "skipped": false
          },
          {
            "assertion": "Leads count exists",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0842626c-6c4b-4f73-9887-c71c26d31d01",
          "length": 10,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "078e9a93-88da-4eb3-8137-d4eb18d978a5"
        },
        "item": {
          "id": "2446a011-81ea-40b2-9e69-14e242bfcc15",
          "name": "IQ Agent Health",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "iq-agent",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "12867098-a0b9-45f9-a671-bfd80cee522d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('IQ Agent health check successful', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Success flag present', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "63332242-c267-4366-b45f-ef2dc06b108a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v1",
              "iq-agent",
              "health"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "036b8db1-c415-44a6-a907-12ce6d6b0416",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "dcabb067-4800-4882-b7f9-7c892a12c085",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sat, 23 Aug 2025 15:40:50 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "190"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-request-id",
              "value": "1b60eecc-def1-4cf0-8f41-aea4899530c0"
            },
            {
              "key": "x-process-time",
              "value": "0.0014586448669433594"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-frame-options",
              "value": "DENY"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "content-security-policy",
              "value": "default-src 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "permissions-policy",
              "value": "geolocation=(), microphone=(), camera=()"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              117,
              110,
              104,
              101,
              97,
              108,
              116,
              104,
              121,
              34,
              44,
              34,
              110,
              101,
              111,
              52,
              106,
              95,
              99,
              111,
              110,
              110,
              101,
              99,
              116,
              101,
              100,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              103,
              114,
              97,
              112,
              104,
              95,
              115,
              116,
              97,
              116,
              105,
              115,
              116,
              105,
              99,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              109,
              101,
              109,
              111,
              114,
              121,
              95,
              115,
              116,
              97,
              116,
              105,
              115,
              116,
              105,
              99,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              108,
              97,
              115,
              116,
              95,
              113,
              117,
              101,
              114,
              121,
              95,
              116,
              105,
              109,
              101,
              34,
              58,
              110,
              117,
              108,
              108,
              125,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              81,
              32,
              65,
              103,
              101,
              110,
              116,
              32,
              115,
              116,
              97,
              116,
              117,
              115,
              58,
              32,
              117,
              110,
              104,
              101,
              97,
              108,
              116,
              104,
              121,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              110,
              117,
              108,
              108,
              125
            ]
          },
          "cookie": [],
          "responseTime": 5,
          "responseSize": 190
        },
        "id": "2446a011-81ea-40b2-9e69-14e242bfcc15",
        "assertions": [
          {
            "assertion": "IQ Agent health check successful",
            "skipped": false
          },
          {
            "assertion": "Success flag present",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "868d191c-5459-44b4-a899-1d30a684a6d1",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d6de6433-af22-4d84-a214-70e99e3746d5"
        },
        "item": {
          "id": "323f572d-5883-46a0-9467-a29d4977a386",
          "name": "IQ Agent Status",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "iq-agent",
                "status"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "11517e8f-d8ee-4439-b0df-e6f50f618a77",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status check successful', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Agent status present', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.status).to.exist;",
                  "    pm.expect(['healthy', 'degraded', 'unhealthy']).to.include(response.status);",
                  "});"
                ],
                "_lastExecutionId": "914d6167-bfbb-45c6-8e56-b7f3d80a7aa3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v1",
              "iq-agent",
              "status"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "96729811-bb25-4a07-8b05-06be7122330a",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "d4e6f325-084a-42d9-aec2-281d61027aa4",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sat, 23 Aug 2025 15:40:50 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "179"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-request-id",
              "value": "75eefe84-46fa-46f1-b796-1bbb9391f15e"
            },
            {
              "key": "x-process-time",
              "value": "0.001252889633178711"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-frame-options",
              "value": "DENY"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "content-security-policy",
              "value": "default-src 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "permissions-policy",
              "value": "geolocation=(), microphone=(), camera=()"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              100,
              101,
              103,
              114,
              97,
              100,
              101,
              100,
              34,
              44,
              34,
              116,
              105,
              109,
              101,
              115,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              51,
              84,
              49,
              53,
              58,
              52,
              48,
              58,
              53,
              49,
              46,
              50,
              53,
              55,
              54,
              55,
              50,
              34,
              44,
              34,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              73,
              81,
              34,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              53,
              48,
              51,
              58,
              32,
              73,
              81,
              32,
              65,
              103,
              101,
              110,
              116,
              32,
              105,
              110,
              105,
              116,
              105,
              97,
              108,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              102,
              97,
              105,
              108,
              101,
              100,
              58,
              32,
              39,
              78,
              101,
              111,
              52,
              106,
              71,
              114,
              97,
              112,
              104,
              82,
              65,
              71,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              39,
              32,
              111,
              98,
              106,
              101,
              99,
              116,
              32,
              104,
              97,
              115,
              32,
              110,
              111,
              32,
              97,
              116,
              116,
              114,
              105,
              98,
              117,
              116,
              101,
              32,
              39,
              99,
              111,
              110,
              110,
              101,
              99,
              116,
              39,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 5,
          "responseSize": 179
        },
        "id": "323f572d-5883-46a0-9467-a29d4977a386",
        "assertions": [
          {
            "assertion": "Status check successful",
            "skipped": false
          },
          {
            "assertion": "Agent status present",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "596c1492-718a-4c97-9c2a-625803313dfa",
          "length": 10,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bcbad7db-787a-4855-9860-3872f1aa0676"
        },
        "item": {
          "id": "38db6ae6-a5c7-426d-8623-051ad72cae3c",
          "name": "Business Profiles (Should 401)",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "business-profiles",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "34f97c02-5d26-4e4b-9104-abd0b701108d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Protected endpoint returns 401', function() {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test('Error message present', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.detail).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "95978ae7-237e-4198-9637-c88557039605"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v1",
              "business-profiles",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJlOThlMjgwMS01YTVmLTRiNDUtYWRiZi1kY2U2YWMxNGY2YjEiLCJleHAiOjE3NTU5NjU0NDYsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTU5NjM2NDZ9.g1JlzG2uG23MoEze2Z_DUVU8mJ9bQS_cpi-bPh-fymE"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d1209681-c0d0-4be8-aa80-a84b5ec7d6fc",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "f2593299-c1f8-48d4-a5be-c42c1bda25ae",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "date",
              "value": "Sat, 23 Aug 2025 15:40:50 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "39"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-request-id",
              "value": "836ae55c-30ea-407a-b732-e48aab4675f4"
            },
            {
              "key": "x-process-time",
              "value": "1.5260353088378906"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-frame-options",
              "value": "DENY"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "content-security-policy",
              "value": "default-src 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "permissions-policy",
              "value": "geolocation=(), microphone=(), camera=()"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              116,
              97,
              105,
              108,
              34,
              58,
              34,
              66,
              117,
              115,
              105,
              110,
              101,
              115,
              115,
              32,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2740,
          "responseSize": 39
        },
        "id": "38db6ae6-a5c7-426d-8623-051ad72cae3c",
        "assertions": [
          {
            "assertion": "Protected endpoint returns 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Protected endpoint returns 401",
              "message": "expected response to have status code 401 but got 404",
              "stack": "AssertionError: expected response to have status code 401 but got 404\n   at Object.eval sandbox-script.js:1:9)"
            }
          },
          {
            "assertion": "Error message present",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ad6f6af4-883d-4b4c-bd66-642106f229fb",
          "length": 10,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "69a3b0fa-975d-4338-bdc4-0e5917dc9321"
        },
        "item": {
          "id": "64667340-7680-4d36-9f95-447aa27454dc",
          "name": "Assessments (Should 401)",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "assessments",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "922a8774-a1dc-433b-87e9-b3cefed8780b",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Protected endpoint returns 401', function() {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "_lastExecutionId": "46aee322-eab3-4b70-8aad-161e29caaf66"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8000",
            "path": [
              "api",
              "v1",
              "assessments",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJlOThlMjgwMS01YTVmLTRiNDUtYWRiZi1kY2U2YWMxNGY2YjEiLCJleHAiOjE3NTU5NjU0NDYsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTU5NjM2NDZ9.g1JlzG2uG23MoEze2Z_DUVU8mJ9bQS_cpi-bPh-fymE"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "49270f39-c4e0-40e0-b0e6-4d081da109ec",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "4229caea-5c99-4f8c-835c-fe361fe3c5a4",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "date",
              "value": "Sat, 23 Aug 2025 15:40:52 GMT"
            },
            {
              "key": "server",
              "value": "uvicorn"
            },
            {
              "key": "content-length",
              "value": "2"
            },
            {
              "key": "content-type",
              "value": "application/json"
            },
            {
              "key": "x-request-id",
              "value": "a02aae4e-450b-41a0-86b2-28f9a20f9e1c"
            },
            {
              "key": "x-process-time",
              "value": "2.341648817062378"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-frame-options",
              "value": "DENY"
            },
            {
              "key": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains"
            },
            {
              "key": "content-security-policy",
              "value": "default-src 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "permissions-policy",
              "value": "geolocation=(), microphone=(), camera=()"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              93
            ]
          },
          "cookie": [],
          "responseTime": 3595,
          "responseSize": 2
        },
        "id": "64667340-7680-4d36-9f95-447aa27454dc",
        "assertions": [
          {
            "assertion": "Protected endpoint returns 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Protected endpoint returns 401",
              "message": "expected response to have status code 401 but got 200",
              "stack": "AssertionError: expected response to have status code 401 but got 200\n   at Object.eval sandbox-script.js:1:10)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 1706
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Protected endpoint returns 401",
          "message": "expected response to have status code 401 but got 404",
          "stack": "AssertionError: expected response to have status code 401 but got 404\n   at Object.eval sandbox-script.js:1:9)",
          "checksum": "c7256266fac55c22e8e1518ac4d77c2e",
          "id": "1b656d97-a54e-43dc-8613-3d0ba176c78a",
          "timestamp": 1755963654039,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "38db6ae6-a5c7-426d-8623-051ad72cae3c",
          "name": "Business Profiles (Should 401)",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "business-profiles",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "34f97c02-5d26-4e4b-9104-abd0b701108d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Protected endpoint returns 401', function() {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test('Error message present', function() {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.detail).to.exist;",
                  "});"
                ],
                "_lastExecutionId": "95978ae7-237e-4198-9637-c88557039605"
              }
            }
          ]
        },
        "parent": {
          "id": "ff20e49f-85a8-4a07-a0c2-077c91e044fd",
          "name": "5. Protected Endpoints",
          "item": [
            {
              "id": "38db6ae6-a5c7-426d-8623-051ad72cae3c",
              "name": "Business Profiles (Should 401)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "business-profiles",
                    ""
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{jwt_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "34f97c02-5d26-4e4b-9104-abd0b701108d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Protected endpoint returns 401', function() {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      "",
                      "pm.test('Error message present', function() {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.detail).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "95978ae7-237e-4198-9637-c88557039605"
                  }
                }
              ]
            },
            {
              "id": "64667340-7680-4d36-9f95-447aa27454dc",
              "name": "Assessments (Should 401)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "assessments",
                    ""
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{jwt_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "922a8774-a1dc-433b-87e9-b3cefed8780b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Protected endpoint returns 401', function() {",
                      "    pm.response.to.have.status(401);",
                      "});"
                    ],
                    "_lastExecutionId": "46aee322-eab3-4b70-8aad-161e29caaf66"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "596c1492-718a-4c97-9c2a-625803313dfa",
          "length": 10,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bcbad7db-787a-4855-9860-3872f1aa0676",
          "scriptId": "34f97c02-5d26-4e4b-9104-abd0b701108d",
          "execution": "95978ae7-237e-4198-9637-c88557039605"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Protected endpoint returns 401",
          "message": "expected response to have status code 401 but got 200",
          "stack": "AssertionError: expected response to have status code 401 but got 200\n   at Object.eval sandbox-script.js:1:10)",
          "checksum": "f4f18b6c3770634a0943cfbf1d98716d",
          "id": "ac875b5b-3f17-4181-a43f-bc22c3cd27bc",
          "timestamp": 1755963657680,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "64667340-7680-4d36-9f95-447aa27454dc",
          "name": "Assessments (Should 401)",
          "request": {
            "url": {
              "path": [
                "api",
                "v1",
                "assessments",
                ""
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "922a8774-a1dc-433b-87e9-b3cefed8780b",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Protected endpoint returns 401', function() {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "_lastExecutionId": "46aee322-eab3-4b70-8aad-161e29caaf66"
              }
            }
          ]
        },
        "parent": {
          "id": "ff20e49f-85a8-4a07-a0c2-077c91e044fd",
          "name": "5. Protected Endpoints",
          "item": [
            {
              "id": "38db6ae6-a5c7-426d-8623-051ad72cae3c",
              "name": "Business Profiles (Should 401)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "business-profiles",
                    ""
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{jwt_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "34f97c02-5d26-4e4b-9104-abd0b701108d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Protected endpoint returns 401', function() {",
                      "    pm.response.to.have.status(401);",
                      "});",
                      "",
                      "pm.test('Error message present', function() {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.detail).to.exist;",
                      "});"
                    ],
                    "_lastExecutionId": "95978ae7-237e-4198-9637-c88557039605"
                  }
                }
              ]
            },
            {
              "id": "64667340-7680-4d36-9f95-447aa27454dc",
              "name": "Assessments (Should 401)",
              "request": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "assessments",
                    ""
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{jwt_token}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "922a8774-a1dc-433b-87e9-b3cefed8780b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Protected endpoint returns 401', function() {",
                      "    pm.response.to.have.status(401);",
                      "});"
                    ],
                    "_lastExecutionId": "46aee322-eab3-4b70-8aad-161e29caaf66"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ad6f6af4-883d-4b4c-bd66-642106f229fb",
          "length": 10,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "69a3b0fa-975d-4338-bdc4-0e5917dc9321",
          "scriptId": "922a8774-a1dc-433b-87e9-b3cefed8780b",
          "execution": "46aee322-eab3-4b70-8aad-161e29caaf66"
        }
      }
    ],
    "error": null
  }
}
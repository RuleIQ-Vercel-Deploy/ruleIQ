version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env.local
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    restart: unless-stopped
    networks:
      - compliancegpt-network

  celery_worker:
    build: .
    command: celery -A celery_app worker --loglevel=debug --concurrency=2 --pool=solo --queues=evidence,compliance,notifications,reports
    env_file:
      - .env.local
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app:$PYTHONPATH
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    restart: unless-stopped
    networks:
      - compliancegpt-network
    healthcheck:
      test: ["CMD", "celery", "-A", "celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery_beat:
    build: .
    command: celery -A celery_app beat --loglevel=debug
    env_file:
      - .env.local
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app:$PYTHONPATH
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    restart: unless-stopped
    networks:
      - compliancegpt-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - compliancegpt-network

volumes:
  redis_data:

networks:
  compliancegpt-network:
    driver: bridge
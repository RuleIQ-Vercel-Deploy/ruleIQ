version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - FERNET_KEY=${FERNET_KEY}
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - compliancegpt-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  celery_worker:
    build: .
    command: celery -A celery_app worker --loglevel=info --concurrency=4 --queues=evidence,compliance,notifications,reports
    environment:
      - ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - FERNET_KEY=${FERNET_KEY}
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - compliancegpt-network

  celery_beat:
    build: .
    command: celery -A celery_app beat --loglevel=info
    environment:
      - ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - FERNET_KEY=${FERNET_KEY}
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - compliancegpt-network

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - compliancegpt-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - compliancegpt-network

volumes:
  redis_data:

networks:
  compliancegpt-network:
    driver: bridge
'use client';

import { motion } from 'framer-motion';
import { Bot, Info, Sparkles } from 'lucide-react';

import { Alert, AlertDescription } from '@/components/ui/alert';
import { Badge } from '@/components/ui/badge';
import { Card, CardContent } from '@/components/ui/card';
import { type Question } from '@/lib/assessment-engine/types';
import { cn } from '@/lib/utils';
import { type UserContext } from '@/types/ai';

import { QuestionRenderer } from './QuestionRenderer';

interface FollowUpQuestionProps {
  question: Question;
  value: any;
  onChange: (value: any) => void;
  error?: string | null;
  disabled?: boolean;
  frameworkId?: string;
  sectionId?: string;
  userContext?: UserContext;
  reasoning?: string;
  className?: string;
}

export function FollowUpQuestion({
  question,
  value,
  onChange,
  error,
  disabled = false,
  frameworkId,
  sectionId,
  userContext,
  reasoning,
  className,
}: FollowUpQuestionProps) {
  return (
    <motion.div
      initial={{ opacity: 0, y: 20, scale: 0.95 }}
      animate={{ opacity: 1, y: 0, scale: 1 }}
      transition={{ duration: 0.4, ease: 'easeOut' }}
      className={cn('relative', className)}
    >
      {/* AI Generated Badge */}
      <div className="absolute -right-2 -top-2 z-10">
        <Badge
          variant="outline"
          className="border-0 bg-gradient-to-r from-primary to-gold text-white shadow-md"
        >
          <Bot className="mr-1 h-3 w-3" />
          AI Generated
        </Badge>
      </div>

      <Card className="border-2 border-dashed border-primary/30 bg-gradient-to-br from-primary/5 to-gold/5">
        <CardContent className="p-6">
          {/* Header */}
          <div className="mb-4 flex items-start gap-3">
            <div className="rounded-lg bg-primary/10 p-2">
              <Sparkles className="h-5 w-5 text-primary" />
            </div>
            <div className="flex-1">
              <h4 className="mb-1 text-sm font-medium text-primary">AI Follow-up Question</h4>
              {reasoning && <p className="text-xs text-muted-foreground">{reasoning}</p>}
            </div>
          </div>

          {/* Question Content */}
          <div className="space-y-4">
            <QuestionRenderer
              question={question}
              value={value}
              onChange={onChange}
              {...(error !== null && { error })}
              disabled={disabled}
              {...(frameworkId && { frameworkId })}
              {...(sectionId && { sectionId })}
              {...(userContext && { userContext })}
            />

            {/* AI Context Info */}
            <Alert className="border-primary/20 bg-primary/5">
              <Info className="h-4 w-4 text-primary" />
              <AlertDescription className="text-xs">
                This question was generated by AI based on your previous responses to provide deeper
                insights into your compliance posture. You can skip this if not applicable.
              </AlertDescription>
            </Alert>
          </div>
        </CardContent>
      </Card>
    </motion.div>
  );
}

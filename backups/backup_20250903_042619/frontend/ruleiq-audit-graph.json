{
  "metadata": {
    "project": "ruleIQ Frontend Audit",
    "date": "2025-01-07",
    "auditor": "Claude AI Assistant"
  },
  "entities": [
    {
      "name": "ruleIQ Frontend",
      "type": "Project",
      "observations": [
        "Next.js 14+ App Router with TypeScript",
        "Uses shadcn/ui with Radix UI primitives",
        "Dark theme default with navy (#17255A) and gold (#CB963E) branding",
        "8px grid system with Inter font family",
        "Route groups: (auth), (dashboard), (public)",
        "TanStack Query for data fetching",
        "pnpm package manager",
        "Currently in Phase 3: Quick Actions & Productivity"
      ]
    },
    {
      "name": "ruleIQ Design System",
      "type": "DesignSystem",
      "observations": [
        "Primary: Navy (#17255A)",
        "Accent: Gold (#CB963E) - use sparingly",
        "Energy: Cyan (#34FEF7) - use very sparingly",
        "8px grid system",
        "Inter font family",
        "Dark theme by default with light theme option",
        "Focus states use gold ring color",
        "Custom button variants: navy, accent, outline-navy"
      ]
    },
    {
      "name": "ruleIQ Component Architecture",
      "type": "Architecture",
      "observations": [
        "Mix of shadcn/ui and custom components",
        "Some aceternity UI components mixed in",
        "Components organized by feature: /components/{feature}/",
        "Dashboard uses widget-based architecture",
        "Global styles in app/globals.css with CSS variables",
        "Uses CVA for component variants",
        "Implements loading states with skeletons"
      ]
    },
    {
      "name": "Core UX Principles",
      "type": "DesignPrinciple",
      "observations": [
        "Alignment creates relationships between elements",
        "Spacing conveys emotional content and relationships",
        "Visual style creates behavioral expectations",
        "Animation smooths transitions between states",
        "Text sizes should scale with rem/em units",
        "Hover states only for interactive elements"
      ]
    },
    {
      "name": "shadcn/ui",
      "type": "ComponentLibrary",
      "observations": [
        "NOT a component library - code distribution system",
        "Built on Radix UI primitives + Tailwind CSS",
        "Open Code approach - you own the components",
        "AI-Ready design for LLM understanding",
        "Composable interface across all components",
        "CLI tool for component distribution",
        "Server Component compatible"
      ]
    },
    {
      "name": "ruleIQ UI Issues",
      "type": "Issues",
      "observations": [
        "Mixing aceternity UI with shadcn creates inconsistency",
        "Custom button sizes duplicate shadcn defaults",
        "Not using percentage-based font sizing (using Inter with px)",
        "Inline styles in page.tsx instead of component variants",
        "Focus states inconsistent between custom and shadcn components",
        "Loading states not standardized across app",
        "Color system uses both HSL and named colors",
        "Dashboard using client components unnecessarily"
      ]
    },
    {
      "name": "Alex Persona",
      "type": "UserPersona",
      "observations": ["Power user who wants keyboard shortcuts", "Values efficiency and productivity", "Needs command palette (Cmd+K)", "Wants quick access to common tasks"]
    },
    {
      "name": "Ben Persona",
      "type": "UserPersona",
      "observations": ["Needs guided actions and confirmations", "Less technical user", "Requires clear visual hierarchy", "Benefits from tooltips and help text"]
    },
    {
      "name": "Catherine Persona",
      "type": "UserPersona",
      "observations": ["Values bulk operations for compliance", "Manages large datasets", "Needs export functionality", "Requires multi-select actions"]
    }
  ],
  "relationships": [
    { "from": "ruleIQ Frontend", "to": "shadcn/ui", "type": "uses" },
    { "from": "ruleIQ Frontend", "to": "ruleIQ Design System", "type": "implements" },
    { "from": "ruleIQ Design System", "to": "Core UX Principles", "type": "follows" },
    { "from": "ruleIQ Component Architecture", "to": "shadcn/ui", "type": "based-on" },
    { "from": "ruleIQ Frontend", "to": "Alex Persona", "type": "serves" },
    { "from": "ruleIQ Frontend", "to": "Ben Persona", "type": "serves" },
    { "from": "ruleIQ Frontend", "to": "Catherine Persona", "type": "serves" },
    { "from": "Alex Persona", "to": "ruleIQ Component Architecture", "type": "requires-productivity-features" },
    { "from": "Ben Persona", "to": "ruleIQ Design System", "type": "needs-clear-hierarchy" },
    { "from": "Catherine Persona", "to": "ruleIQ Component Architecture", "type": "requires-bulk-operations" },
    { "from": "ruleIQ UI Issues", "to": "ruleIQ Design System", "type": "degrades" },
    { "from": "ruleIQ UI Issues", "to": "Core UX Principles", "type": "violates" },
    { "from": "ruleIQ Component Architecture", "to": "ruleIQ UI Issues", "type": "contains" }
  ]
}

version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: ruleiq-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus-config.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/alerts.yml:/etc/prometheus/alerts.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=30d'
    ports:
      - "9090:9090"
    networks:
      - monitoring
    labels:
      - "com.ruleiq.service=prometheus"
      - "com.ruleiq.environment=production"

  grafana:
    image: grafana/grafana:latest
    container_name: ruleiq-grafana
    restart: unless-stopped
    env_file:
      - .env.monitoring
    environment:
      # Override with secure defaults if not provided
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-ruleiq_admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_INSTALL_PLUGINS=redis-datasource
      - GF_SERVER_ROOT_URL=${GRAFANA_URL:-http://localhost:3000}
      - GF_ANALYTICS_REPORTING_ENABLED=false
      # Enhanced security settings
      - GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_SECURITY_COOKIE_SECURE=${GF_SECURITY_COOKIE_SECURE:-true}
      - GF_SECURITY_COOKIE_SAMESITE=strict
      - GF_SECURITY_STRICT_TRANSPORT_SECURITY=true
      - GF_SECURITY_X_CONTENT_TYPE_OPTIONS=true
      - GF_SECURITY_X_XSS_PROTECTION=true
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_BASIC_ENABLED=true
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_SESSION_PROVIDER=file
      - GF_SESSION_COOKIE_SECURE=${GF_SESSION_COOKIE_SECURE:-true}
    volumes:
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus
    labels:
      - "com.ruleiq.service=grafana"
      - "com.ruleiq.environment=production"

  alertmanager:
    image: prom/alertmanager:latest
    container_name: ruleiq-alertmanager
    restart: unless-stopped
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    ports:
      - "9093:9093"
    networks:
      - monitoring
    labels:
      - "com.ruleiq.service=alertmanager"
      - "com.ruleiq.environment=production"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: ruleiq-node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - monitoring
    labels:
      - "com.ruleiq.service=node-exporter"
      - "com.ruleiq.environment=production"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: ruleiq-cadvisor
    restart: unless-stopped
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    ports:
      - "8080:8080"
    networks:
      - monitoring
    labels:
      - "com.ruleiq.service=cadvisor"
      - "com.ruleiq.environment=production"

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: ruleiq-postgres-exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - monitoring
    labels:
      - "com.ruleiq.service=postgres-exporter"
      - "com.ruleiq.environment=production"

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: ruleiq-redis-exporter
    restart: unless-stopped
    environment:
      REDIS_ADDR: "redis://${REDIS_HOST}:${REDIS_PORT}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    ports:
      - "9121:9121"
    networks:
      - monitoring
    labels:
      - "com.ruleiq.service=redis-exporter"
      - "com.ruleiq.environment=production"

  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: ruleiq-blackbox-exporter
    restart: unless-stopped
    volumes:
      - ./monitoring/blackbox.yml:/etc/blackbox_exporter/config.yml
    ports:
      - "9115:9115"
    networks:
      - monitoring
    labels:
      - "com.ruleiq.service=blackbox-exporter"
      - "com.ruleiq.environment=production"

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  alertmanager-data:
    driver: local

networks:
  monitoring:
    driver: bridge
    name: ruleiq-monitoring